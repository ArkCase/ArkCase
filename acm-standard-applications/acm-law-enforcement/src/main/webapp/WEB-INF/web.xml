<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">

    <display-name>ACM Law Enforcement</display-name>

    <!--
		SPRING ROOT WEB APPLICATION CONTEXT.  Spring MVC does require us to have a root application
		context with service beans, and a web application context with controllers.  We can't have
		everything in one big application context.  That means controllers have to be defined in
		spring-web-*.xml files, and service beans in spring-library-*.xml files.
	-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:/spring/spring-library-*.xml,
            classpath:/spring/spring-security-config.xml,
            file:${user.home}/.arkcase/acm/spring-security/spring-security-config-*.xml,
            classpath*:/spring-security/spring-security-config-*.xml
        </param-value>
    </context-param>

    <!-- The default Spring authentication profile. To use a different profile pass it as system property ex. -Dspring.profiles.active="ssoSaml" -->
    <context-param>
        <param-name>spring.profiles.default</param-name>
        <param-value>ldap</param-value>
    </context-param>

    <!-- Sets RequestId, User Id, Remote address in org.slfj.MDC variables -->
    <filter>
        <filter-name>RequestMDCFilter</filter-name>
        <filter-class>com.armedia.acm.web.api.RequestMDCFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>
    <filter-mapping>
        <filter-name>RequestMDCFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>miltonFilter</filter-name>
        <filter-class>io.milton.servlet.SpringMiltonFilter</filter-class>
        <init-param>
            <param-name>milton.exclude.paths</param-name>
            <param-value>/static,/templates</param-value>
        </init-param>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:miltonContext.xml</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>miltonFilter</filter-name>
        <url-pattern>/webdav/*</url-pattern>
    </filter-mapping>

    <!--
		SPRING SECURITY
	-->

    <!-- To use concurrent session support -->
    <listener>
        <listener-class>
            org.springframework.security.web.session.HttpSessionEventPublisher
        </listener-class>
    </listener>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- this may be necessary for Tomcat 7 deployments -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/j_spring_security_check</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/logout</url-pattern>
    </servlet-mapping>

    <!--
		SPRING MVC. This servlet MUST be named "Spring MVC Dispatcher Servlet" or else the view resolver will not  be
		able to find JSP files.
	-->
    <servlet>
        <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
                classpath:/spring/appServlet/servlet-context.xml
                classpath*:spring/spring-web-*.xml
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--
        FORCE UTF8 ENCODING
    -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 
    	ETag Filter - .js and .css files
     -->
    <filter>
        <filter-name>etagFilter</filter-name>
        <filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>etagFilter</filter-name>
        <url-pattern>*.js</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>etagFilter</filter-name>
        <url-pattern>*.css</url-pattern>
    </filter-mapping>

</web-app>
