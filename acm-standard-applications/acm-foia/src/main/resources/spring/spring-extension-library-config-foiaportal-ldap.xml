<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
                            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <beans:beans profile="extension-foia">
    
        <beans:bean id="foiaPortalLdapProperties" class="com.armedia.acm.crypto.properties.AcmEncryptablePropertySourcesPlaceholderConfigurer">
            <beans:property name="encryptablePropertyUtils" ref="acmEncryptablePropertyUtils"/>
            <beans:property name="ignoreResourceNotFound" value="true"/>
            <beans:property name="localOverride" value="false"/>
            <beans:property name="order" value="42"/>
            <beans:property name="ignoreUnresolvablePlaceholders" value="true"/>
            <beans:property name="locations">
                <beans:list>
                    <beans:value>file:${user.home}/.arkcase/acm/spring/spring-config-foiaportal-ldap.properties</beans:value>
                </beans:list>
            </beans:property>
        </beans:bean>
    
        <beans:bean id="foiaportal_ldapUrl" class="java.lang.String">
            <beans:constructor-arg value='${ldapConfig.ldapUrl}'/>
        </beans:bean>
    
        <beans:bean id="foiaportal_ldapUrls" factory-bean="foiaportal_ldapUrl" factory-method="split">
            <beans:constructor-arg value=','/>
        </beans:bean>
    
        <beans:bean id="foiaportal_ldap_config" class="com.armedia.acm.services.users.model.ldap.AcmLdapConfig">
            <!-- ldapUrl: URL of the ldap instance (e.g. ldap://armedia.com:389) -->
            <beans:property name="ldapUrl" ref='foiaportal_ldapUrls'/>
            <beans:property name="baseDC" value='${ldapConfig.base}'/>
            <!-- only specify authUserDn if your LDAP server requires user authentication (do not specify if you
                are using anonymous authentication -->
            <beans:property name="authUserDn" value='${ldapConfig.authUserDn}'/>
            <!-- only specify authUserPassword if you also specify authUserDn -->
            <beans:property name="authUserPassword" value='${ldapConfig.authUserPassword}'/>
            <!-- userIdAttributeName: use "samAccountName" if your LDAP server is Active Directory.  Most other LDAP
                 servers use "uid". -->
            <beans:property name="userIdAttributeName" value='${ldapConfig.userIdAttributeName}'/>
            <!-- mailAttributeName: use "mail"  Most  LDAP servers use "mail". -->
            <beans:property name="mailAttributeName" value="mail"/>
            <!-- ignorePartialResultException: true if your LDAP server is Active Directory, false for other LDAP servers -->
            <beans:property name="ignorePartialResultException" value="true"/>
            <!-- referral: "follow" if you want to follow LDAP referrals, "ignore" otherwise (search "ldap referral" for more info). -->
            <beans:property name="referral" value="follow"/>
            <beans:property name="directoryName" value='${ldapConfig.id}'/>
            <beans:property name="directoryType" value='${ldapConfig.directoryType}'/>
            <!-- used for activedirectory only, in case of usernames are longer than 20 characters, for example portal registered users -->
            <beans:property name="generateUsernameEnabled" value="true"/>
        </beans:bean>
    
        <beans:bean id="foiaportal_authenticate" class="com.armedia.acm.services.users.model.ldap.AcmLdapAuthenticateConfig"
            parent="foiaportal_ldap_config">
            <!-- userSearchBase is the tree under which users are found (e.g. cn=users).  -->
            <beans:property name="searchBase" value='${ldapConfig.userSearchBase}'/>
            <beans:property name="enableEditingLdapUsers" value='${ldapConfig.enableEditingLdapUsers}'/>
        </beans:bean>
    
        <beans:bean id="foiaportal_sync" class="com.armedia.acm.services.users.model.ldap.AcmLdapSyncConfig" parent="foiaportal_ldap_config">
            <!-- groupSearchBase is the full tree under which groups are found (e.g. ou=groups,dc=armedia,dc=com).  -->
            <beans:property name="groupSearchBase" value='${ldapConfig.groupSearchBase}'/>
            <!-- groupSearchFilter is an LDAP filter to restrict which entries under the groupSearchBase are processsed -->
            <beans:property name="groupSearchFilter" value='${ldapConfig.groupSearchFilter}'/>
            <!-- filter to retrieve all groups with a name greater than some group name - used to page group search results -->
            <beans:property name="groupSearchPageFilter" value='${ldapConfig.groupSearchPageFilter}'/>
            <beans:property name="allUsersFilter" value="${ldapConfig.allUsersFilter}"/>
            <beans:property name="allChangedUsersFilter" value="${ldapConfig.allChangedUsersFilter}"/>
            <beans:property name="allUsersPageFilter" value="${ldapConfig.allUsersPageFilter}"/>
            <beans:property name="allChangedUsersPageFilter" value="${ldapConfig.allChangedUsersPageFilter}"/>
            <beans:property name="userDomain" value='${ldapConfig.userDomain}'/>
            <beans:property name="userSearchBase" value='${ldapConfig.userSearchBase}'/>
            <beans:property name="userSearchFilter" value='${ldapConfig.userSearchFilter}'/>
            <beans:property name="groupSearchFilterForUser" value='${ldapConfig.groupSearchFilterForUser}'/>
            <beans:property name="syncPageSize" value='${ldapConfig.syncPageSize}'/>
            <beans:property name="allUsersSortingAttribute" value='${ldapConfig.allUsersSortingAttribute}'/>
            <beans:property name="groupsSortingAttribute" value='${ldapConfig.groupsSortingAttribute}'/>
            <beans:property name="userSyncAttributes" value='${ldapConfig.userAttributes}'/>
            <beans:property name="changedGroupSearchFilter" value='${ldapConfig.changedGroupSearchFilter}'/>
            <beans:property name="changedGroupSearchPageFilter" value='${ldapConfig.changedGroupSearchPageFilter}'/>
            <beans:property name="userPrefix" value="${ldapConfig.userPrefix}"/>
            <beans:property name="groupPrefix" value="${ldapConfig.groupPrefix}"/>
        </beans:bean>
        
        <beans:bean id="foiaportal_ldapAuthenticateService" class="gov.foia.service.FOIALdapAuthenticationService">
            <!-- ldapAuthenticateConfig: ref must match an AcmLdapAuthenticateConfig bean -->
            <beans:property name="ldapAuthenticateConfig" ref="foiaportal_authenticate"/>
            <!-- ldapSyncConfig: ref must match an AcmLdapSyncConfig bean -->
            <beans:property name="ldapSyncConfig" ref="foiaportal_sync"/>
            <!-- do not change ldapDao properties. -->
            <beans:property name="ldapDao" ref="customPagedLdapDao"/>
            <beans:property name="userDao" ref="userJpaDao"/>
            <beans:property name="ldapUserDao" ref="springLdapUserDao"/>
        </beans:bean>
    
    </beans:beans>
</beans:beans>
