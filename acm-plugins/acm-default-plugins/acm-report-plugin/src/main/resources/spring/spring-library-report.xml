<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- keeping this bean for now even though we are not using any properties yet.  -->
    <bean id="reportPluginProperties" class="com.armedia.acm.reloadproperties.beans.AcmReloadablePropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/acm-reports.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props></props>
        </property>
    </bean>

    <bean id="reportToGroupsMapProperties" class="com.armedia.acm.reloadproperties.beans.AcmReloadablePropertiesFactoryBean">

        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/reportToGroupsMap.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props></props>
        </property>
    </bean>

    <bean id="reportServerConfigurationProperties" class="com.armedia.acm.reloadproperties.beans.AcmReloadablePropertiesFactoryBean">

        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/acm-reports-server-config.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props></props>
        </property>
    </bean>

    <bean id="reportPlugin" class="com.armedia.acm.pluginmanager.model.AcmPlugin">
        <property name="pluginName" value="Report Plugin"/>
        <property name="pluginProperties" ref="reportPluginProperties"/>
    </bean>

    <bean id="reportService" class="com.armedia.acm.plugins.report.service.ReportServiceImpl">
        <property name="reportUrl" ref="reportResource"/>
        <property name="muleContextManager" ref="muleContextManager"/>
        <property name="propertyFileManager" ref="propertyFileManager"/>
        <property name="reportsPropertiesFileLocation" value="${user.home}/.arkcase/acm/acm-reports.properties"/>
        <property name="reportToGroupsMapPropertiesFileLocation" value="${user.home}/.arkcase/acm/reportToGroupsMap.properties"/>
        <property name="reportServerConfigPropertiesFileLocation" value="${user.home}/.arkcase/acm/acm-reports-server-config.properties"/>
        <property name="reportPluginProperties" ref="reportPluginProperties"/>
        <property name="reportToGroupsMapProperties" ref="reportToGroupsMapProperties"/>
        <property name="executeSolrQuery" ref="executeSolrQuery"/>
        <property name="searchResults">
            <bean class="com.armedia.acm.services.search.service.SearchResults"/>
        </property>
    </bean>

    <bean id="uploadReportService" class="com.armedia.acm.plugins.report.service.UploadGeneratedReportService">
        <property name="documentRepositoryDao" ref="documentRepositoryDao"/>
        <property name="acmFolderService" ref="acmFolderService"/>
        <property name="ecmFileService" ref="ecmFileService"/>
        <property name="ecmFileDao" ref="ecmFileDao"/>
        <property name="auditPropertyEntityAdapter" ref="auditPropertyEntityAdapter"/>
        <property name="uploadUserId" value="${PENTAHO_RETRIEVE_REPORT_USER}"/>
        <property name="reportDocumentRepository" value="${PENTAHO_REPORT_DOCUMENT_REPOSITORY_NAME}"/>
    </bean>

    <bean id="downloadReportService" class="com.armedia.acm.plugins.report.service.DownloadGeneratedReportRestService">
        <property name="pentahoUrl" value="${PENTAHO_SERVER_INTERNAL_URL}"/>
        <property name="pentahoPort" value="${PENTAHO_SERVER_INTERNAL_PORT}"/>
        <property name="downloadApi" value="${PENTAHO_DOWNLOAD_API}"/>
    </bean>

    <bean id="filePropertiesRestService" class="com.armedia.acm.plugins.report.service.FilePropertiesRestService">
        <property name="pentahoUrl" value="${PENTAHO_SERVER_INTERNAL_URL}"/>
        <property name="pentahoPort" value="${PENTAHO_SERVER_INTERNAL_PORT}"/>
        <property name="filePropertiesApi" value="${PENTAHO_FILE_PROPERTIES_API}"/>
    </bean>

    <bean id="removeGeneratedReportRestService"
          class="com.armedia.acm.plugins.report.service.RemoveGeneratedReportRestService">
        <property name="pentahoUrl" value="${PENTAHO_SERVER_INTERNAL_URL}"/>
        <property name="pentahoPort" value="${PENTAHO_SERVER_INTERNAL_PORT}"/>
        <property name="removeFileApi" value="${PENTAHO_REMOVE_FILE_API}"/>
    </bean>

    <bean id="scheduleReportRestService" class="com.armedia.acm.plugins.report.service.ScheduleReportRestService">
        <property name="pentahoUser" value="${PENTAHO_SERVER_USER}"/>
        <property name="pentahoPassword" value="${PENTAHO_SERVER_PASSWORD}"/>
        <property name="pentahoUrl" value="${PENTAHO_SERVER_INTERNAL_URL}"/>
        <property name="pentahoPort" value="${PENTAHO_SERVER_INTERNAL_PORT}"/>
        <property name="scheduleApi" value="${PENTAHO_SCHEDULE_API}"/>
        <property name="retrieveSchedulesApi" value="${PENTAHO_RETRIEVE_SCHEDULES_API}"/>
        <property name="deleteScheduleApi" value="${PENTAHO_DELETE_SCHEDULE_API}"/>
    </bean>

    <bean id="scheduleGeneratedReportService"
          class="com.armedia.acm.plugins.report.service.ScheduleGeneratedReportServiceImpl">
        <property name="filePropertiesRestService" ref="filePropertiesRestService"/>
        <property name="downloadService" ref="downloadReportService"/>
        <property name="uploadService" ref="uploadReportService"/>
        <property name="removeGeneratedReportRestService" ref="removeGeneratedReportRestService"/>
        <property name="pentahoUser" value="${PENTAHO_SERVER_USER}"/>
        <property name="pentahoPassword" value="${PENTAHO_SERVER_PASSWORD}"/>
    </bean>

</beans>