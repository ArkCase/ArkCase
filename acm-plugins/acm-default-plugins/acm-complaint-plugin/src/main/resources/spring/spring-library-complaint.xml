<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- keeping this bean for now even though we are not using any properties yet.  -->
    <bean id="complaintPluginProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/complaintPlugin.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props>
                <prop key="complaint.workflow.enabled">true</prop>
                <prop key="complaint.workflow.activiti.name">cmComplaintWorkflow</prop>
                <prop key="complaint.workflow.trigger.eventName">com.armedia.acm.complaint.submittedForReview</prop>
                <prop key="complaint.workflow.activiti.inApproval.stateName">IN APPROVAL</prop>
                <prop key="complaint.workflow.activiti.approved.stateName">ACTIVE</prop>
                <prop key="complaint.complaint-types">Agricultural,Arson,Better Business Dispute,Domestic
                    Dispute,Government,Local,Pollution
                </prop>
                <prop key="complaint.priorities">Low,Medium,High,Expedite</prop>
                <prop key="ephesoft.load.documents.seconds">10</prop>
            </props>
        </property>
    </bean>

    <!-- event handlers -->
    <bean id="startComplaintBusinessProcessAction" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="${complaint.workflow.trigger.eventName}"/>
        <property name="action" ref="startBusinessProcessAction"/>
        <property name="enabled" value="${complaint.workflow.enabled}"/>
        <property name="parameters">
            <map>
                <entry key="processDefinitionKey" value="${complaint.workflow.activiti.name}"/>
            </map>
        </property>
        <property name="respondPredicate">
            <bean class="org.apache.commons.collections.functors.TruePredicate" factory-method="getInstance"/>
        </property>
    </bean>

    <bean id="updateComplaintStatus_inApproval" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.activiti.businessProcess.start"/>
        <property name="action" ref="updateComplaintStatusAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map>
                <entry key="newStatus" value="${complaint.workflow.activiti.inApproval.stateName}"/>
            </map>
        </property>
        <property name="respondPredicate">
            <bean class="com.armedia.acm.plugins.complaint.service.ComplaintUpdateStatusPredicate"/>
        </property>
    </bean>

    <bean id="updateComplaintStatus_approved" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.activiti.businessProcess.end"/>
        <property name="action" ref="updateComplaintStatusAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map>
                <entry key="newStatus" value="${complaint.workflow.activiti.approved.stateName}"/>
            </map>
        </property>
        <property name="respondPredicate">
            <bean class="com.armedia.acm.plugins.complaint.service.ComplaintUpdateStatusPredicate"/>
        </property>
    </bean>

    <bean id="closeComplaintRequestService"
          class="com.armedia.acm.plugins.complaint.service.CloseComplaintRequestService">
        <property name="closeComplaintRequestDao" ref="closeComplaintRequestDao"/>
        <property name="complaintDao" ref="acmComplaintDao"/>
        <property name="complaintEventPublisher" ref="complaintEventPublisher"/>
        <property name="saveCaseService" ref="saveCaseService"/>
        <property name="caseFileDao" ref="caseFileDao"/>
        <property name="ecmFileDao" ref="ecmFileDao"/>
        <property name="ecmFileService" ref="ecmFileService"/>
        <property name="complaintFolderNameFormat" value="Complaint (%s)"/>
        <property name="caseFileDetailsFormat" value="This case file is based on Complaint '%s'.%s"/>
        <property name="complaintDetailsFormat" value="&lt;p/&gt;Complaint '%s' had these details:&lt;p/&gt;%s"/>
        <property name="caseFileEventUtility" ref="caseFileEventUtility"/>
    </bean>

    <bean id="closeComplaintRequestProcessEndHandler"
          class="com.armedia.acm.plugins.complaint.service.CloseComplaintRequestProcessEndHandler">
        <property name="closeComplaintRequestService" ref="closeComplaintRequestService"/>
    </bean>
    <!-- end of event responses -->

    <!-- event action handlers -->
    <bean id="updateComplaintStatusAction" class="com.armedia.acm.event.AcmAction">
        <property name="actionId" value="UPDATE_COMPLAINT_STATUS"/>
        <property name="actionName" value="Update Complaint Status"/>
        <property name="targetMuleEndpoint" value="jms://updateComplaintStatusQueue"/>
        <property name="parameters">
            <list>
                <value>newStatus</value>
            </list>
        </property>

    </bean>
    <!-- end of action handlers -->

    <!-- lookup tables -->

    <bean id="acmComplaintDao" class="com.armedia.acm.plugins.complaint.dao.ComplaintDao">
        <aop:scoped-proxy proxy-target-class="true"/>
    </bean>
    <bean id="closeComplaintRequestDao" class="com.armedia.acm.plugins.complaint.dao.CloseComplaintRequestDao"/>


    <!-- pre-save handlers -->
    <bean id="complaintContainerHandler"
          class="com.armedia.acm.plugins.complaint.pipeline.presave.ComplaintContainerHandler"/>
    <bean id="complaintParticipantRulesHandler"
          class="com.armedia.acm.plugins.complaint.pipeline.presave.ComplaintParticipantRulesHandler">
        <property name="participantsRule" ref="participantsBusinessRule"/>
    </bean>
    <!-- post-save handlers -->
    <bean id="complaintRulesHandler" class="com.armedia.acm.plugins.complaint.pipeline.postsave.ComplaintRulesHandler">
        <property name="saveRule" ref="saveComplaintBusinessRule"/>
    </bean>
    <bean id="complaintEcmFolderHandler"
          class="com.armedia.acm.plugins.complaint.pipeline.postsave.ComplaintEcmFolderHandler">
        <property name="ecmFileService" ref="ecmFileService"/>
    </bean>
    <bean id="complaintOutlookHandler"
          class="com.armedia.acm.plugins.complaint.pipeline.postsave.ComplaintOutlookHandler">
        <property name="autoCreateFolderForComplaint" value="${complaint.auto_create_calendar_folder}"/>
        <property name="outlookContainerCalendarService" ref="outlookContainerService"/>
        <property name="calendarAdminService" ref="outlookCalendarAdminServiceExtension"/>
    </bean>

    <bean id="complaintPipelineManager" class="com.armedia.acm.services.pipeline.PipelineManager">
        <property name="preSaveHandlers">
            <list value-type="com.armedia.acm.services.pipeline.handler.PipelineHandler">
                <ref bean="complaintContainerHandler"/>
                <ref bean="complaintParticipantRulesHandler"/>
            </list>
        </property>
        <property name="postSaveHandlers">
            <list value-type="com.armedia.acm.services.pipeline.handler.PipelineHandler">
                <ref bean="complaintRulesHandler"/>
                <ref bean="complaintEcmFolderHandler"/>
                <ref bean="complaintOutlookHandler"/>
            </list>
        </property>
    </bean>

    <bean id="saveComplaintTransaction" class="com.armedia.acm.plugins.complaint.service.SaveComplaintTransaction">
        <property name="complaintDao" ref="acmComplaintDao"/>
        <property name="pipelineManager" ref="complaintPipelineManager"/>
    </bean>

    <bean id="complaintToSolrTransformer" class="com.armedia.acm.plugins.complaint.service.ComplaintToSolrTransformer">
        <property name="userDao" ref="userJpaDao"/>
        <property name="complaintDao" ref="acmComplaintDao"/>
        <property name="searchAccessControlFields" ref="searchAccessControlFields"/>
    </bean>

    <bean id="complaintPlugin" class="com.armedia.acm.pluginmanager.model.AcmPlugin">
        <property name="pluginName" value="Complaint Plugin"/>
        <property name="pluginProperties" ref="complaintPluginProperties"/>
        <property name="suportedObjectTypesNames">
            <list>
                <value>COMPLAINT</value>
            </list>
        </property>
    </bean>

    <bean id="complaintEventPublisher" class="com.armedia.acm.plugins.complaint.service.ComplaintEventPublisher"/>

    <bean id="saveComplaintBusinessRule" class="com.armedia.acm.plugins.complaint.service.SaveComplaintBusinessRule"
          parent="simpleStatelessSingleObjectRuleManager">
        <property name="ruleSpreadsheetFilename" value="drools-complaint-number-rules.xlsx"/>
    </bean>

    <bean id="complaintFactory" class="com.armedia.acm.plugins.complaint.service.ComplaintFactory">
        <property name="personDao" ref="acmPersonDao"/>
        <property name="fileService" ref="ecmFileService"/>
        <property name="userDao" ref="userJpaDao"/>
        <property name="acmParticipantDao" ref="acmParticipantDao"/>
        <property name="auditPropertyEntityAdapter" ref="auditPropertyEntityAdapter"/>
    </bean>

    <bean id="complaintService" class="com.armedia.acm.plugins.complaint.service.ComplaintService" scope="prototype">
        <property name="objectAssociationDao" ref="objectAssociationDao"/>
        <property name="ecmFileDao" ref="ecmFileDao"/>
        <property name="ecmFileService" ref="ecmFileService"/>
        <property name="complaintFactory" ref="complaintFactory"/>
        <property name="folderAndFilesUtils" ref="folderAndFilesUtils"/>
        <property name="saveComplaintTransaction" ref="saveComplaintTransaction"/>
        <property name="properties" ref="acm-form-properties"/>
        <property name="authenticationTokenService" ref="authenticationTokenService"/>
        <property name="userDao" ref="userJpaDao"/>
        <property name="userActionDao" ref="userActionDao"/>
        <property name="userActionExecutor" ref="userActionExecutor"/>
        <property name="acmPluginManager" ref="acmPluginManager"/>
        <property name="personDao" ref="acmPersonDao"/>
        <property name="complaintEventPublisher" ref="complaintEventPublisher"/>
        <property name="functionalAccessService" ref="functionalAccessService"/>
        <property name="searchResults" ref="searchResults"/>
        <property name="tagService" ref="tagService"/>
        <property name="associatedTagService" ref="associatedTagService"/>
        <property name="lookupDao" ref="lookupDao"/>
        <property name="translationService" ref="translationService"/>
    </bean>

    <bean id="complaintHistoryListener" class="com.armedia.acm.plugins.complaint.service.ComplaintHistoryListener">
        <property name="acmObjectHistoryService" ref="acmObjectHistoryService"/>
    </bean>

    <bean id="complaintEventListener" class="com.armedia.acm.plugins.complaint.service.ComplaintEventListener">
        <property name="acmObjectHistoryService" ref="acmObjectHistoryService"/>
        <property name="acmObjectHistoryEventPublisher" ref="acmObjectHistoryEventPublisher"/>
        <property name="complaintEventPublisher" ref="complaintEventPublisher"/>
        <property name="acmAssignmentDao" ref="acmAssignmentDao"/>
        <property name="calendarService" ref="outlookContainerService"/>
        <property name="shouldDeleteCalendarFolder" value="${complaint.delete_calendar_folder_after_complaint_closed}"/>
        <property name="complaintStatusClosed" value="${complaint.status.closed}"/>
        <property name="calendarAdminService" ref="outlookCalendarAdminServiceExtension"/>
    </bean>

    <bean id="complaintDataAccessUpdateLocator"
          class="com.armedia.acm.plugins.complaint.service.ComplaintDataAccessUpdateLocator">
        <property name="complaintDao" ref="acmComplaintDao"/>
    </bean>

    <bean id="complaintCaptureFileEventListener"
          class="com.armedia.acm.plugins.complaint.service.ComplaintCaptureFileEventListener">
        <property name="watchFolder" ref="captureFolder"/>
        <property name="workingFolder" ref="workingFolder"/>
        <property name="completedFolder" ref="completedFolder"/>
        <property name="errorFolder" ref="errorFolder"/>
        <property name="saveComplaintTransaction" ref="saveComplaintTransaction"/>
        <property name="ecmFileService" ref="ecmFileService"/>
        <property name="loadingDocumentsSeconds" value="${ephesoft.load.documents.seconds}"/>
        <property name="auditPropertyEntityAdapter" ref="auditPropertyEntityAdapter"/>
        <property name="OXMFilePath" value="${user.home}/.arkcase/acm${capture.oxm.file.path}"/>
    </bean>


</beans>