<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:cmis="http://www.mulesoft.org/schema/mule/cmis"
      xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      version="CE-3.5.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/cmis http://www.mulesoft.org/schema/mule/cmis/current/mule-cmis.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">


    <flow name="saveComplaint" doc:name="Save Complaint">
        <description>Saves a complaint (creates new complaint if it has not been saved
            previously).  The payload must be a Complaint entity object.  The return message&quot;s
            payload is the (possibly updated) complaint; i.e. for a new complaint, the return payload&quot;s
            ID fields are populated.</description>
        <vm:inbound-endpoint
                address="vm://saveComplaint.in"
                exchange-pattern="request-response"
                doc:name="Save Complaint">
        </vm:inbound-endpoint>

        <logger level="DEBUG" category="com.armedia.acm.plugins.complaint"/>


        <timer-interceptor/>

        <set-property doc:name="Created or Updated?"
                      propertyName="complaintCreated" value="#[payload.complaintId == null]"/>
        <logger level="DEBUG" category="com.armedia.acm.plugins.complaint"/>

        <!-- NOTE: Intellij IDEA incorrectly claims scripting:transformer is not allowed here. This XML is valid. -->
        <scripting:transformer name="saveComplaintCreatorModifierTransformer">
            <scripting:script engine="groovy">
                <scripting:text><![CDATA[
                    String user = message.getInboundProperty("acmUser") == null ? null :
                        message.getInboundProperty("acmUser").name;
                    if ( user != null )
                    {
                        message.getInboundProperty("auditAdapter").setUserId(user);
                    }
                    return payload;
                    ]]>
                </scripting:text>
            </scripting:script>

        </scripting:transformer>

        <!-- Tell mule to call the save method (as opposed to other DAO methods that may also take an EcmFile
             parameter).  The property must go in the inbound scope.  The only way to do it is to set an outbound
             property, then call an outbound endpoint (thereby starting a new flow).
        -->
        <set-property propertyName="daoMethod" value="save"/>
        <vm:outbound-endpoint address="vm://complaintDao.in" exchange-pattern="request-response"/>

        <component doc:name="Save Complaint Business Rules">
            <spring-object bean="saveComplaintBusinessRule"/>
        </component>

        <choice>
            <when expression="#[payload.ecmFolderPath != null]">
                <processor-chain>
                    <!-- store the complaint folder in a flow variable so the enricher can see it -->
                    <set-variable variableName="containerFolder" value="#[message.payload.containerFolder]"/>
                    <!-- update the complaint with the ID of the folder -->
                    <enricher  source="#[message.payload.id]" target="#[flowVars['containerFolder'].cmisFolderId]">
                        <cmis:get-or-create-folder-by-path folderPath="#[payload.ecmFolderPath]"/>
                    </enricher>
                    <logger category="com.armedia.acm.plugins.complaint" level="DEBUG"
                            message="Folder Id: #[payload.containerFolder.cmisFolderId]"/>
                </processor-chain>

            </when>
            <otherwise>
                <logger category="com.armedia.acm.plugins.complaint" level="INFO" message="No need to create folder."/>
            </otherwise>
        </choice>


        <catch-exception-strategy>
            <logger level="ERROR" category="com.armedia.plugins.complaint" message="Exception saving: #[exception.message]"/>
            <set-property propertyName="saveException" value="#[exception]"/>
        </catch-exception-strategy>

    </flow>

    <flow name="complaintDao" processingStrategy="synchronous">
        <vm:inbound-endpoint address="vm://complaintDao.in" exchange-pattern="request-response"/>

        <logger level="TRACE" category="com.armedia.acm.plugins.complaint" message="Calling Complaint DAO"/>

        <component doc:name="Complaint DAO">
            <property-entry-point-resolver property="daoMethod"/>
            <spring-object bean="acmComplaintDao"/>
        </component>
    </flow>

</mule>