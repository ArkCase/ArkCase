<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:cmis="http://www.mulesoft.org/schema/mule/cmis"
      xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      version="CE-3.7.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/cmis http://www.mulesoft.org/schema/mule/cmis/current/mule-cmis.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">


    <flow name="saveUserOrg" doc:name="Save UserOrg">
        <description>Saves a userOrg (creates new userOrg record if it has not been saved
            previously). The payload must be a UserOrg entity object. The return message&quot;s
            payload is the (possibly updated) userOrg; i.e. for a new userOrg, the return payload&quot;s
            ID fields are populated.
        </description>
        <vm:inbound-endpoint
                address="vm://saveUserOrg.in"
                exchange-pattern="request-response"
                doc:name="Save UserOrg">
        </vm:inbound-endpoint>

        <logger level="DEBUG" category="com.armedia.acm.plugins.profile"/>

        <timer-interceptor/>

        <choice>
            <when expression="message.inboundProperties['acmUser'] == null || payload == null || payload.user == null || payload.user.userId == null">
                <scripting:component doc:name="Script">
                    <scripting:script engine="Groovy"><![CDATA[
                        throw new IllegalStateException('Payload and user id were not specified');
                    ]]>
                    </scripting:script>
                </scripting:component>
            </when>
            <otherwise>
                <logger category="com.armedia.acm.plugins.profile" level="DEBUG"
                        message="Input is OK, proceeding with flow"/>
            </otherwise>
        </choice>

        <set-property doc:name="Created or Updated?"
                      propertyName="userOrgCreated" value="#[payload.userOrgId == null]"/>
        <logger level="DEBUG" category="com.armedia.acm.plugins.profile"/>

        <!-- NOTE: Intellij IDEA incorrectly claims scripting:transformer is not allowed here. This XML is valid. -->
        <scripting:transformer name="saveUserOrgCreatorModifierTransformer">
            <scripting:script engine="groovy">
                <scripting:text><![CDATA[
                    String user = message.getInboundProperty("acmUser").name;
                    if ( user != null )
                    {
                        muleContext.registry.get("arkContext").getBean("auditPropertyEntityAdapter").setUserId(user);
                    }

                    return payload;
                    ]]>
                </scripting:text>
            </scripting:script>
        </scripting:transformer>

        <scripting:transformer name="userOrgFolderTransformer">
            <scripting:script engine="groovy">
                <scripting:text><![CDATA[
                    import com.armedia.acm.plugins.ecm.model.AcmFolder;
                    import com.armedia.acm.plugins.ecm.model.AcmContainer;

                    if ( payload.container == null )
                    {
                        payload.container = new AcmContainer();
                    }

                    if ( payload.container.folder == null )
                    {
                        payload.container.folder = new AcmFolder();

                        String user = payload.user.userId;
                        payload.ecmFolderPath = muleContext.registry.get("arkContext").getBean("acmUserOrgService").getProfileLocation() + "/" + user;
                        payload.container.folder.name = user;
                    }

                    return payload;
                    ]]>
                </scripting:text>
            </scripting:script>
        </scripting:transformer>


        <choice>
            <when expression="#[payload.ecmFolderPath != null]">
                <processor-chain>
                    <!-- store the container folder in a flow variable so the enricher can see it -->
                    <set-variable variableName="folder" value="#[message.payload.container.folder]"/>
                    <!-- update the userOrg with the ID of the folder -->
                    <enricher source="#[message.payload.id]" target="#[flowVars['folder'].cmisFolderId]">
                        <cmis:get-or-create-folder-by-path folderPath="#[payload.ecmFolderPath]"/>
                    </enricher>
                </processor-chain>
            </when>
            <otherwise>
                <logger category="com.armedia.acm.plugins.profile" level="INFO" message="No need to create folder."/>
            </otherwise>
        </choice>

        <scripting:transformer name="saveUserOrgDaoTransformer">
            <scripting:script engine="groovy">
                <scripting:text><![CDATA[
                    payload = muleContext.registry.get("arkContext").getBean("acmUserOrgDao").save(payload);
                    return payload;
                    ]]>
                </scripting:text>
            </scripting:script>
        </scripting:transformer>


        <catch-exception-strategy>
            <logger level="ERROR" category="com.armedia.plugins.profile"
                    message="Exception saving: #[exception.message]"/>
            <set-property propertyName="saveException" value="#[exception]"/>
        </catch-exception-strategy>

    </flow>

</mule>