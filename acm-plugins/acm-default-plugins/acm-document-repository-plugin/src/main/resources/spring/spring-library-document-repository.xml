<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- pre-save handlers -->
    <bean id="documentRepositoryAuditHandler"
          class="com.armedia.acm.plugins.documentrepository.pipeline.presave.DocumentRepositoryAuditHandler"/>

    <!-- post-save handlers -->
    <bean id="documentRepositoryEcmFolderHandler"
          class="com.armedia.acm.plugins.documentrepository.pipeline.postsave.DocumentRepositoryEcmFolderHandler">
        <property name="ecmFileService" ref="ecmFileService"/>
    </bean>
    <bean id="documentRepositoryContainerHandler"
          class="com.armedia.acm.plugins.documentrepository.pipeline.postsave.DocumentRepositoryContainerHandler"/>

    <bean id="documentRepositoryPipelineManager" class="com.armedia.acm.services.pipeline.PipelineManager">
        <property name="preSaveHandlers">
            <list value-type="com.armedia.acm.services.pipeline.handler.PipelineHandler">
                <ref bean="documentRepositoryAuditHandler"/>
            </list>
        </property>
        <property name="postSaveHandlers">
            <list value-type="com.armedia.acm.services.pipeline.handler.PipelineHandler">
                <ref bean="documentRepositoryRulesHandler"/>
                <ref bean="documentRepositoryContainerHandler"/>
                <ref bean="documentRepositoryEcmFolderHandler"/>
            </list>
        </property>
    </bean>

    <bean id="documentRepositoryToSolrTransformer"
          class="com.armedia.acm.plugins.documentrepository.service.DocumentRepositoryToSolrTransformer">
        <property name="userDao" ref="userJpaDao"/>
        <property name="searchAccessControlFields" ref="searchAccessControlFields"/>
        <property name="documentRepositoryDao" ref="documentRepositoryDao"/>
    </bean>

    <bean id="documentRepositoryDao" class="com.armedia.acm.plugins.documentrepository.dao.DocumentRepositoryDao">
        <aop:scoped-proxy proxy-target-class="true"/>
    </bean>

    <bean id="documentRepositoryServiceImpl"
          class="com.armedia.acm.plugins.documentrepository.service.impl.DocumentRepositoryServiceImpl">
        <property name="documentRepositoryDao" ref="documentRepositoryDao"/>
        <property name="acmFolderService" ref="acmFolderService"/>
        <property name="noteDao" ref="noteDao"/>
        <property name="associatedTagService" ref="associatedTagService"/>
        <property name="objectAssociationService" ref="objectAssociationService"/>
        <property name="pipelineManager" ref="documentRepositoryPipelineManager"/>
        <property name="documentRepositoryEventPublisher" ref="documentRepositoryEventPublisher"/>
    </bean>

    <bean id="documentRepositoryPluginProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
            to be able to read the file; otherwise it will try to read from the classpath -->
        <property name="location"
                  value="file:${user.home}/.arkcase/acm/documentRepositoryPlugin.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
    </bean>

    <bean id="documentRepositoryPlugin" class="com.armedia.acm.pluginmanager.model.AcmPlugin">
        <property name="pluginName" value="Document Repository Plugin"/>
        <property name="pluginProperties" ref="documentRepositoryPluginProperties"/>
        <property name="suportedObjectTypesNames">
            <list>
                <value>DOC_REPO</value>
            </list>
        </property>
    </bean>

    <bean id="documentRepositoryEventPublisher"
          class="com.armedia.acm.plugins.documentrepository.service.DocumentRepositoryEventPublisher"/>
</beans>
