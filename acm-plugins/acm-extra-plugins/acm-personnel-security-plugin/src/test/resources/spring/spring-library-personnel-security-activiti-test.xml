<?xml version="1.0" encoding="UTF-8"?><!--suppress SpringFacetInspection -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="databaseSchemaUpdate" value="true"/>
        <property name="jobExecutorActivate" value="false"/>
    </bean>

    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration"/>
    </bean>

    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>

    <!-- mock objects used by business process -->
    <bean id="milestoneServiceClass" class="java.lang.Class" factory-method="forName">
        <constructor-arg value="com.armedia.acm.service.milestone.service.MilestoneService"/>
    </bean>
    <bean id="milestoneService" class="org.easymock.EasyMock" factory-method="createMock">
        <constructor-arg ref="milestoneServiceClass"/>
    </bean>

    <bean id="caseFileStateServiceClass" class="java.lang.Class" factory-method="forName">
        <constructor-arg value="com.armedia.acm.plugins.personnelsecurity.casestatus.service.CaseFileStateService"/>
    </bean>
    <bean id="caseFileStateService" class="org.easymock.EasyMock" factory-method="createMock">
        <constructor-arg ref="caseFileStateServiceClass"/>
    </bean>

    <bean id="clearanceVerificationSystemExportServiceClass" class="java.lang.Class" factory-method="forName">
        <constructor-arg value="com.armedia.acm.plugins.personnelsecurity.cvs.service.ClearanceVerificationSystemExportService"/>
    </bean>
    <bean id="clearanceVerificationSystemExportService" class="org.easymock.EasyMock" factory-method="createMock">
        <constructor-arg ref="clearanceVerificationSystemExportServiceClass"/>
    </bean>

    <bean id="correspondenceServiceClass" class="java.lang.Class" factory-method="forName">
        <constructor-arg value="com.armedia.acm.correspondence.service.CorrespondenceServiceImpl"/>
    </bean>
    <bean id="correspondenceService" class="org.easymock.EasyMock" factory-method="createMock">
        <constructor-arg ref="correspondenceServiceClass"/>
    </bean>

</beans>
