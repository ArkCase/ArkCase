<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.armedia</groupId>
    <artifactId>acm</artifactId>
    <version>3.3.3</version>
    <packaging>pom</packaging>
    <name>ArkCase Case Management System</name>
    <description>Cloud-based case management system with a very nice UI</description>
    <inceptionYear>2014</inceptionYear>
    <licenses>
        <license>
            <name>GNU Lesser General Public License</name>
            <url>https://www.gnu.org/licenses/lgpl-3.0.en.html</url>
        </license>
    </licenses>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <acm.version>${project.version}</acm.version>
        <activemq.version>5.13.2</activemq.version>
        <activiti.version>5.15.1</activiti.version>
        <alfresco-opencmis-extension.version>1.1</alfresco-opencmis-extension.version>
        <amazon.sdk.version>1.11.543</amazon.sdk.version>
        <apache-commons-beanutils.version>1.9.2</apache-commons-beanutils.version>
        <apache-commons-codec>1.9</apache-commons-codec>
        <apache-commons-exec.version>1.3</apache-commons-exec.version>
        <apache-commons-file-upload.version>1.3.1</apache-commons-file-upload.version>
        <apache-commons-io.version>2.4</apache-commons-io.version>
        <apache-commons-lang.version>2.6</apache-commons-lang.version>
        <apache-commons-lang3.version>3.5</apache-commons-lang3.version>
        <apache-commons-net.version>3.3</apache-commons-net.version>
        <apache-commons-vfs2.version>2.0</apache-commons-vfs2.version>
        <apache-commons-text.version>1.6</apache-commons-text.version>
        <apache-httpcomponents-httpclient.version>4.5</apache-httpcomponents-httpclient.version>
        <apache-tika-parsers.version>1.16</apache-tika-parsers.version>
        <asm.version>5.0.3</asm.version>
        <aspectj.version>1.7.4</aspectj.version>
        <barcode4j.version>2.1</barcode4j.version>
        <bouncycastle.version>1.54</bouncycastle.version>
        <c3p0.version>0.9.2.1</c3p0.version>
        <castor-xml.version>1.3.3</castor-xml.version>
        <chemistry.version>1.1.0</chemistry.version>
        <osgi.version>6.0.0</osgi.version>
        <com.google.guava.version>18.0</com.google.guava.version>
        <docx4j.core>3.3.7</docx4j.core>
        <docx4j.export.fo>3.3.6</docx4j.export.fo>
        <drools.version>6.1.0.Final</drools.version>
        <easymock.version>4.1</easymock.version>
        <easymock-extension.version>3.2</easymock-extension.version>
        <eclipselink-jpa.version>2.6.0</eclipselink-jpa.version>
        <ehcache.version>2.6.9</ehcache.version>
        <exchange-web-services.version>2.0</exchange-web-services.version>
        <fasterxml-jackson-core.version>2.7.2</fasterxml-jackson-core.version>
        <fop.version>2.0</fop.version>
        <freemarker.version>2.3.28</freemarker.version>
        <frevvo.forms.version>6.3</frevvo.forms.version>
        <google-collections.version>1.0</google-collections.version>
        <gps.pointlocations.version>4.1</gps.pointlocations.version>
        <gson.version>1.7.1</gson.version>
        <h2.version>1.3.169</h2.version>
        <hamcrest.version>1.3</hamcrest.version>
        <hibernate-validator.version>5.1.1.Final</hibernate-validator.version>
        <jai-imageio-core.version>1.3.1</jai-imageio-core.version>
        <java.mail.version>1.5.6</java.mail.version>
        <javax-el.version>3.0.0</javax-el.version>
        <javax.servlet.version>3.1.0</javax.servlet.version>
        <javax-persistence.version>2.1.0</javax-persistence.version>
        <javax-validation.version>1.1.0.Final</javax-validation.version>
        <joda-time.version>2.3</joda-time.version>
        <json-path.version>2.2.0</json-path.version>
        <json-schema-validator.version>2.2.6</json-schema-validator.version>
        <json-simple.version>1.1.1</json-simple.version>
        <jsonassert.version>1.5.0</jsonassert.version>
        <jsp.api.version>2.0</jsp.api.version>
        <jstl.version>1.2</jstl.version>
        <junit.version>4.12</junit.version>
        <!-- do not update Liquibase past 3.1.1 until https://liquibase.jira.com/browse/CORE-1920 is closed -->
        <liquibase.version>3.1.1</liquibase.version>
        <log4j.version>2.11.0</log4j.version>
        <magic.matcher.version>0.1.2</magic.matcher.version>
        <mariadb.jdbc.version>2.2.6</mariadb.jdbc.version>
        <maven.checkstyle.plugin.version>2.15</maven.checkstyle.plugin.version>
	<gitflow-maven-plugin.version>1.14.0</gitflow-maven-plugin.version>
	<milton.version>2.7.3.5</milton.version>
        <mockito.version>1.10.19</mockito.version>
        <mysql.version>5.1.35</mysql.version>
        <netty.version>4.1.7.Final</netty.version>
        <!-- by default spring.security.saml2.core uses opensaml version 2.6.1, which uses bouncycastle version 1.46, but we require version
            1.54 -->
        <opensaml.version>2.6.4</opensaml.version>
        <org.apache.poi.version>3.17</org.apache.poi.version>
        <com.itextpdf.version>5.5.10</com.itextpdf.version>
        <net.sf.jtidy.version>r938</net.sf.jtidy.version>
        <org.json.version>20140107</org.json.version>
        <org.mvel.version>2.2.1.Final</org.mvel.version>
        <pdfbox.version>2.0.11</pdfbox.version>
        <postgresql.version>9.3-1100-jdbc41</postgresql.version>
        <powermock.version>1.7.0</powermock.version>
        <puppycrawl.version>6.8.1</puppycrawl.version>
        <reactor.version>2.0.8.RELEASE</reactor.version>
        <reactor-spring.version>2.0.7.RELEASE</reactor-spring.version>
        <rome.version>1.0</rome.version>
        <slf4j.version>1.7.25</slf4j.version>
        <solr-solrj.version>7.6.0</solr-solrj.version>
        <sonar.version>3.5.0.1254</sonar.version>
        <spring.integration.version>4.2.9.RELEASE</spring.integration.version>
        <spring.ldap.version>1.3.2.RELEASE</spring.ldap.version>
        <spring.security.kerberos.version>1.0.1.RELEASE</spring.security.kerberos.version>
        <spring.security.saml2.core.version>1.0.2.RELEASE</spring.security.saml2.core.version>
        <spring.security.version>3.2.7.RELEASE</spring.security.version>
        <spring.version>4.2.9.RELEASE</spring.version>
        <spring-retry-version>1.1.2.RELEASE</spring-retry-version>
        <springfox-version>2.5.0</springfox-version>
        <springframework-addons.version>0.1</springframework-addons.version>
        <sqlserver.version>4.0</sqlserver.version>
        <tomcat-jdbc.version>8.0.14</tomcat-jdbc.version>
        <voodoodyne-jackson-jsog.version>1.1.1</voodoodyne-jackson-jsog.version>
        <xmlgraphics.version>2.0.1</xmlgraphics.version>
        <xmlunit.version>2.5.1</xmlunit.version>
        <zt-exec.version>1.8</zt-exec.version>
        <docx4j.core>3.3.7</docx4j.core>
        <docx4j.export.fo>3.3.6</docx4j.export.fo>
        <snakeyaml.version>1.11</snakeyaml.version>
        <commons-configuration.version>1.10</commons-configuration.version>
        <cdi-api.version>1.0</cdi-api.version>
        <mockito.core.version>2.20.0</mockito.core.version>
        <powermock.version2>2.0.0</powermock.version2>
        <hazelcast.version>3.11.2</hazelcast.version>
        <quartz.version>2.3.1</quartz.version>
        <jaudiotagger.version>2.0.3</jaudiotagger.version>
        <reflections.version>0.9.9</reflections.version>
        <camel.spring.version>3.0.0-M3</camel.spring.version>
        <camel.spi.version>3.0.0-M3</camel.spi.version>
        <camel.core.version>3.0.0-M3</camel.core.version>
        <camel.cmis.version>3.0.0-M3-rc2</camel.cmis.version>
        <camel.support.version>3.0.0-M3</camel.support.version>
        <camel.api.version>3.0.0-M3</camel.api.version>

        <kryo.version>5.0.0-RC4</kryo.version>
        <subzero.version>0.9</subzero.version>
        <xsync-version>1.2</xsync-version>
        <nimbusds.version>5.8</nimbusds.version>
    </properties>
    <organization>
        <name>ArkCase LLC</name>
        <url>http://www.arkcase.com</url>
    </organization>
    <developers>
        <developer>
            <name>David Miller</name>
            <email>david.miller@arkcase.com</email>
            <roles>
                <role>Technical Lead</role>
            </roles>
            <timezone>America/New_York</timezone>
        </developer>
        <developer>
            <name>Riste Tutureski</name>
            <email>riste.tutureski@armedia.com</email>
            <roles>
                <role>Architect</role>
            </roles>
            <timezone>Europe/Skopje</timezone>
        </developer>
    </developers>
    <contributors>
        <contributor>
            <name>James Bailey</name>
            <email>james.bailey@arkcase.com</email>
            <roles>
                <role>Sponsor</role>
            </roles>
            <timezone>America/New_York</timezone>
        </contributor>
    </contributors>
    <modules>
        <module>acm-web</module>
        <module>acm-plugins</module>
        <module>acm-standard-applications</module>
        <module>acm-services</module>
        <module>acm-tool-integrations</module>
        <module>acm-forms</module>
        <module>acm-user-interface</module>
        <module>acm-core-api</module>
    </modules>
    <scm>
        <connection>scm:git:${git.repository}</connection>
        <developerConnection>scm:git:${git.repository}</developerConnection>
        <url>${git.repository}</url>
        <tag>HEAD</tag>
    </scm>
    <distributionManagement>
        <repository>
            <id>${release-repository.id}</id>
            <name>${release-repository.name}</name>
            <url>${release-repository.url}</url>
        </repository>
    </distributionManagement>
    <repositories>
        <repository>
            <id>central</id>
            <url>http://repo1.maven.org/maven2</url>
        </repository>
        <repository>
            <id>repository.jboss.org-public</id>
            <url>https://repository.jboss.org/nexus/content/groups/public</url>
        </repository>
        <!-- The Activiti repository -->
        <repository>
            <name>Activiti repository (hosted by Alfresco)</name>
            <id>Alfresco Maven Repository</id>
            <url>https://maven.alfresco.com/nexus/content/groups/public/</url>
        </repository>
        <repository>
            <id>milton-repo</id>
            <url>http://dl.bintray.com/milton/Milton</url>
        </repository>
        <!-- swagger -->
        <repository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>https://jcenter.bintray.com/</url>
        </repository>
        <!-- local repo for dependencies not in Maven central... this is for poms embedded one level down -->
        <repository>
            <id>arkcase-local-repo-one-level</id>
            <url>file://${basedir}/../arkcase-lib</url>
        </repository>
        <!-- local repo for dependencies not in Maven central... this is for poms embedded two level down -->
        <repository>
            <id>arkcase-local-repo-two-level</id>
            <url>file://${basedir}/../../arkcase-lib</url>
        </repository>
        <!-- local repo for dependencies not in Maven central... this is for poms embedded three level down -->
        <repository>
            <id>arkcase-local-repo-third-level</id>
            <url>file://${basedir}/../../../arkcase-lib</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <!-- local repo for dependencies not in Maven central... this is for top-level modules -->
        <pluginRepository>
            <id>arkcase-local-repo-top-level</id>
            <url>file://${basedir}/arkcase-lib</url>
        </pluginRepository>
        <!-- local repo for dependencies not in Maven central... this is for poms embedded one level down -->
        <pluginRepository>
            <id>arkcase-local-repo-one-level</id>
            <url>file://${basedir}/../arkcase-lib</url>
        </pluginRepository>
        <!-- local repo for dependencies not in Maven central... this is for poms embedded two level down -->
        <pluginRepository>
            <id>arkcase-local-repo-two-level</id>
            <url>file://${basedir}/../../arkcase-lib</url>
        </pluginRepository>
        <!-- local repo for dependencies not in Maven central... this is for poms embedded three level down -->
        <pluginRepository>
            <id>arkcase-local-repo-third-level</id>
            <url>file://${basedir}/../../../arkcase-lib</url>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>jrebel-maven-plugin</artifactId>
                <version>1.1.8</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <webappDirectory>${project.build.directory}/arkcase</webappDirectory>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.5.0.1254</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <!--<parallel>classes</parallel> -->
                    <threadCount>1</threadCount>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerVersion>${java.version}</compilerVersion>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                </configuration>
                <executions>
                    <execution>
                        <id>log4j-plugin-processor</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>process-classes</phase>
                        <configuration>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <compilerVersion>${java.version}</compilerVersion>
                            <compilerArgument>-Xlint:all</compilerArgument>
                            <showWarnings>true</showWarnings>
                            <showDeprecation>true</showDeprecation>
                            <proc>only</proc>
                            <annotationProcessors>
                                <annotationProcessor>
                                    org.apache.logging.log4j.core.config.plugins.processor.PluginProcessor
                                </annotationProcessor>
                            </annotationProcessors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.amashchenko.maven.plugin</groupId>
                <artifactId>gitflow-maven-plugin</artifactId>
                <version>${gitflow-maven-plugin.version}</version>
                <configuration>
                    <!-- optional configuration -->
                </configuration>
            </plugin>
            <!-- code quality section -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.plugin.version}</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <configLocation>acm-checkstyle-checks.xml</configLocation>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${puppycrawl.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.16</version>
                <configuration>
                    <licenseName>arkcase_license</licenseName>
                    <licenseResolver>classpath://arkcase</licenseResolver>
                    <includes>
                        <include>**/*.java</include>
                        <include>**/*.jsp</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>update-license</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.arkcase</groupId>
                        <artifactId>arkcase-license-headers</artifactId>
                        <version>1.0</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>
            <!-- databases.  The JDBC drivers should be here to run the integration tests. -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.mariadb.jdbc</groupId>
                <artifactId>mariadb-java-client</artifactId>
                <version>${mariadb.jdbc.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>sqljdbc4</artifactId>
                <version>${sqlserver.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-version}</version>
            </dependency>
            <!-- swagger ui -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-version}</version>
            </dependency>
            <!-- milton -->
            <dependency>
                <groupId>io.milton</groupId>
                <artifactId>milton-server-ent</artifactId>
                <version>${milton.version}</version>
            </dependency>
            <!-- frevvo forms -->
            <dependency>
                <groupId>com.frevvo</groupId>
                <artifactId>forms-java</artifactId>
                <version>${frevvo.forms.version}</version>
                <classifier>mailfix</classifier>
            </dependency>
            <dependency>
                <groupId>javax.enterprise</groupId>
                <artifactId>cdi-api</artifactId>
                <version>${cdi-api.version}</version>
            </dependency>
            <!-- Java mail -->
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>javax.mail-api</artifactId>
                <version>${java.mail.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>imap</artifactId>
                <version>${java.mail.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>${java.mail.version}</version>
            </dependency>
            <!-- exclude the mail.jar 1.4 from the war file -->
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>(,1.5)</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mailapi</artifactId>
                <version>(,1.5)</version>
                <scope>provided</scope>
            </dependency>
            <!-- date time -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <!-- business rules -->
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-decisiontables</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <!-- spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jms</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${spring-retry-version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.ldap</groupId>
                <artifactId>spring-ldap-core</artifactId>
                <version>${spring.ldap.version}</version>
                <!-- exclude commons-lang 2.4 since it has a memory leak; force use of commons-lang 2.6 by specific dependency -->
                <exclusions>
                    <exclusion>
                        <groupId>commons-lang</groupId>
                        <artifactId>commons-lang</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-oxm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Spring Integration -->
            <dependency>
                <groupId>org.springframework.integration</groupId>
                <artifactId>spring-integration-sftp</artifactId>
                <version>${spring.integration.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.integration</groupId>
                <artifactId>spring-integration-core</artifactId>
                <version>${spring.integration.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.integration</groupId>
                <artifactId>spring-integration-http</artifactId>
                <version>${spring.integration.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-websocket</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-messaging</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-core</artifactId>
                <version>${reactor.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-net</artifactId>
                <version>${reactor.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor.spring</groupId>
                <artifactId>reactor-spring-context</artifactId>
                <version>${reactor-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
            </dependency>
            <!-- spring utilities -->
            <dependency>
                <groupId>net.unicon.springframework</groupId>
                <artifactId>springframework-addons</artifactId>
                <version>${springframework-addons.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- spring security -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-acl</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security.extensions</groupId>
                <artifactId>spring-security-saml2-core</artifactId>
                <version>${spring.security.saml2.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring.security.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-beans</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-expression</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-aop</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.security.kerberos</groupId>
                <artifactId>spring-security-kerberos-web</artifactId>
                <version>${spring.security.kerberos.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security.kerberos</groupId>
                <artifactId>spring-security-kerberos-client</artifactId>
                <version>${spring.security.kerberos.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-ldap</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-taglibs</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring.security.version}</version>
                <!-- spring security web seems to pull in spring-jdbc 3.0.6 but we don't want that version, so we have to exclude it -->
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-jdbc</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-expression</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- activiti -->
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-engine</artifactId>
                <version>${activiti.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-spring</artifactId>
                <version>${activiti.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-bpmn-layout</artifactId>
                <version>${activiti.version}</version>
            </dependency>
            <!-- quartz -->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <!-- activemq -->
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-broker</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-kahadb-store</artifactId>
                <version>${activemq.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-spring</artifactId>
                <version>${activemq.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- poi -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${org.apache.poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-scratchpad</artifactId>
                <version>${org.apache.poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${org.apache.poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>${org.apache.poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <!-- chemistry -->
            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-client-impl</artifactId>
                <version>${chemistry.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.xml.ws</groupId>
                        <artifactId>jaxws-rt</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>${osgi.version}</version>
            </dependency>

            <!-- alfresco -->
            <dependency>
                <groupId>org.alfresco.cmis.client</groupId>
                <artifactId>alfresco-opencmis-extension</artifactId>
                <version>${alfresco-opencmis-extension.version}</version>
                <type>jar</type>
            </dependency>
            <!-- microsoft outlook / exchange integration -->
            <dependency>
                <groupId>com.microsoft.ews-java-api</groupId>
                <artifactId>ews-java-api</artifactId>
                <version>${exchange-web-services.version}</version>
            </dependency>
            <!-- camel -->
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring-boot-starter</artifactId>
                <version>${camel.spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>spi-annotations</artifactId>
                <version>${camel.spi.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-core</artifactId>
                <version>${camel.core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-api</artifactId>
                <version>${camel.api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-support</artifactId>
                <version>${camel.support.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-cmis-arkcase</artifactId>
                <version>${camel.cmis.version}</version>
            </dependency>

            <!-- apache libraries -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-vfs2</artifactId>
                <version>${apache-commons-vfs2.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${apache-commons-file-upload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${apache-commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${apache-commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache-commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${apache-commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-exec</artifactId>
                <version>${apache-commons-exec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${apache-commons-codec}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${apache-httpcomponents-httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${apache-commons-net.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${apache-commons-text.version}</version>
            </dependency>
            <!-- json -->
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${org.json.version}</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.json-simple</groupId>
                <artifactId>json-simple</artifactId>
                <version>${json-simple.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${fasterxml-jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${fasterxml-jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${fasterxml-jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${fasterxml-jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jsonSchema</artifactId>
                <version>${fasterxml-jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-hibernate5</artifactId>
                <version>${fasterxml-jackson-core.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.voodoodyne.jackson.jsog/jackson-jsog -->
            <dependency>
                <groupId>com.voodoodyne.jackson.jsog</groupId>
                <artifactId>jackson-jsog</artifactId>
                <version>${voodoodyne-jackson-jsog.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <!-- json schema validation -->
            <dependency>
                <groupId>com.github.fge</groupId>
                <artifactId>json-schema-validator</artifactId>
                <version>${json-schema-validator.version}</version>
                <scope>compile</scope>
            </dependency>
            <!-- xml -->
            <dependency>
                <groupId>org.codehaus.castor</groupId>
                <artifactId>castor-xml</artifactId>
                <version>${castor-xml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xmlunit</groupId>
                <artifactId>xmlunit-core</artifactId>
                <version>${xmlunit.version}</version>
                <!-- do not use scope test -->
            </dependency>
            <!-- servlet -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstl.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jsp-api</artifactId>
                <version>${jsp.api.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- liquibase (database com.armedia.acm.ddl maintenance) -->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
                <!-- somehow liquibase wants to pull in jetty. Jetty should not be needed -->
                <exclusions>
                    <exclusion>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-servlet</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- jpa -->
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>javax.persistence</artifactId>
                <version>${javax-persistence.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.core</artifactId>
                <version>${eclipselink-jpa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.jpa</artifactId>
                <version>${eclipselink-jpa.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>asm</groupId>
                        <artifactId>asm-commons</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.asm</artifactId>
                <version>${eclipselink-jpa.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>asm</groupId>
                        <artifactId>asm-commons</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.moxy</artifactId>
                <version>${eclipselink-jpa.version}</version>
            </dependency>
            <!-- bean validation -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax-validation.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>${javax-el.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- expression language -->
            <dependency>
                <groupId>org.mvel</groupId>
                <artifactId>mvel2</artifactId>
                <version>${org.mvel.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- preconditions -->
            <dependency>
                <groupId>com.google.collections</groupId>
                <artifactId>google-collections</artifactId>
                <version>${google-collections.version}</version>
            </dependency>
            <!-- logging -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-web</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- Liquibase logging through slf4j -->
            <dependency>
                <groupId>com.mattbertolini</groupId>
                <artifactId>liquibase-slf4j</artifactId>
                <version>1.2.1</version>
                <scope>runtime</scope>
            </dependency>
            <!-- EclipseLink logging through slf4j -->
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>logging-slf4j</artifactId>
                <version>1.0.1</version>
                <scope>runtime</scope>
            </dependency>
            <!-- zt-exec provides an OutputStream wrapper over Slf4j, so we can redirect output streams from process tools to Slj4j -->
            <dependency>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>zt-exec</artifactId>
                <version>${zt-exec.version}</version>
            </dependency>
            <!-- libraries that PrimeFaces depends on -->
            <dependency>
                <!-- required by PrimeFaces feedReader widget -->
                <groupId>rome</groupId>
                <artifactId>rome</artifactId>
                <version>${rome.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- datasource -->
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-jdbc</artifactId>
                <version>${tomcat-jdbc.version}</version>
            </dependency>
            <!-- XML transformation to PDF (Apache FOP and dependencies) -->
            <dependency>
                <groupId>org.apache.xmlgraphics</groupId>
                <artifactId>xmlgraphics-commons</artifactId>
                <version>${xmlgraphics.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.xmlgraphics</groupId>
                <artifactId>fop</artifactId>
                <version>${fop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pdfbox</groupId>
                <artifactId>pdfbox</artifactId>
                <version>${pdfbox.version}</version>
            </dependency>
            <!-- Barcode generation support for Apache FOP -->
            <dependency>
                <groupId>net.sf.barcode4j</groupId>
                <artifactId>barcode4j-fop-ext</artifactId>
                <version>${barcode4j.version}</version>
            </dependency>
            <!-- Image processing -->
            <dependency>
                <groupId>com.github.jai-imageio</groupId>
                <artifactId>jai-imageio-core</artifactId>
                <version>${jai-imageio-core.version}</version>
            </dependency>
            <!-- Transforming .docx files to PDF -->
            <dependency>
                <groupId>org.docx4j</groupId>
                <artifactId>docx4j</artifactId>
                <version>${docx4j.core}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>jcl-over-slf4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.docx4j</groupId>
                <artifactId>docx4j-export-fo</artifactId>
                <version>${docx4j.export.fo}</version>
            </dependency>
            <!-- testing -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${jsonassert.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- h2 is the in-memory database used for Activiti tests -->
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${easymock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-easymock</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <!-- powermock pulls in an older version of cglib that breaks our unit tests -->
                        <groupId>cglib</groupId>
                        <artifactId>cglib-nodep</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <!-- powermock pulls in an older version of cglib that breaks our unit tests -->
                        <groupId>cglib</groupId>
                        <artifactId>cglib-nodep</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <exclusions>
                    <exclusion>
                        <!-- powermock pulls in an older version of cglib that breaks our unit tests -->
                        <groupId>cglib</groupId>
                        <artifactId>cglib-nodep</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- end of testing -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${com.google.guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-parsers</artifactId>
                <version>${apache-tika-parsers.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.poi</groupId>
                        <artifactId>poi</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.httpcomponents</groupId>
                        <artifactId>httpcore</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>jul-to-slf4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.tdunning</groupId>
                        <artifactId>json</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>jmimemagic</groupId>
                <artifactId>jmimemagic</artifactId>
                <version>${magic.matcher.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-catalina</artifactId>
                <version>${tomcat-jdbc.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.tomcat</groupId>
                        <artifactId>tomcat-servlet-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.tomcat</groupId>
                        <artifactId>tomcat-jsp-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.tomcat</groupId>
                        <artifactId>tomcat-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.tomcat</groupId>
                        <artifactId>tomcat-coyote</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.tomcat</groupId>
                        <artifactId>tomcat-util-scan</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- gps coordinates with ISO 6709 standard -->
            <dependency>
                <groupId>us.fatehi</groupId>
                <artifactId>pointlocation6709</artifactId>
                <version>${gps.pointlocations.version}</version>
            </dependency>
            <!-- SolrJ -->
            <dependency>
                <groupId>org.apache.solr</groupId>
                <artifactId>solr-solrj</artifactId>
                <version>${solr-solrj.version}</version>
            </dependency>
            <!-- Amazon -->
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-bom</artifactId>
                <version>${amazon.sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Freemarker -->
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>
            <!-- Hazelcast-->
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-spring</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-wm</artifactId>
                <version>3.8.3</version>
            </dependency>
            <!-- Kryo Serialization -->
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>
            <dependency>
                <groupId>info.jerrinot</groupId>
                <artifactId>subzero-all</artifactId>
                <version>${subzero.version}</version>
            </dependency>
            <!-- PDF Converter dependencies -->
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itextpdf</artifactId>
                <version>${com.itextpdf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.itextpdf.tool</groupId>
                <artifactId>xmlworker</artifactId>
                <version>${com.itextpdf.version}</version>
            </dependency>
            <dependency>
                <groupId>net.sf.jtidy</groupId>
                <artifactId>jtidy</artifactId>
                <version>${net.sf.jtidy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbusds.version}</version>
            </dependency>

            <!-- concurrency -->
            <dependency>
                <groupId>com.antkorwin</groupId>
                <artifactId>xsync</artifactId>
                <version>${xsync-version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- log4j 2, needed here due to the log4j-plugin-processor in the maven-compiler-plugin configuration -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
    </dependencies>
</project>
