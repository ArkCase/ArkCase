variables:
  # Release new Arkcase version
  # ============================

  # Release RC1 from develop branch (sets the develop branch new snapshot version)
  # ------------------------------------------------------------------------------
  # RELEASE_CANDIDATE_1: true
  # RELEASE_VERSION: 3.3.3-RC1
  # DEVELOP_NEW_VERSION: 3.3.4-SNAPSHOT
  

  # Start RC2 to push commits to branch (from master branch) (**** repeat this for all additional release candididates ****)
  # ------------------------------------------------------------------------------------------------------------------------
  # START_RELEASE_CANDIDATE_X: true
  # RELEASE_VERSION: 3.3.3-RC2

  # Release RC2 (merges changes to master branch. Note: hotfix commits should be merged to both the hotfix and develop branches)
  # ----------------------------------------------------------------------------------------------------------------------------
  # RELEASE_CANDIDATE_X: true
  # RELEASE_VERSION: 3.3.3-RC2


  # Release final version in master (after no more release candidates are planned)
  # ------------------------------------------------------------------------------
  # RELEASE: true
  # RELEASE_VERSION: 3.3.3


  # Hotfix for older Arkcase released version
  # =========================================

  # Start support branch for a released Arkcase version (creates support/3.3.2 branch which can be used for all future release fixes for 3.3.2 version)
  # ---------------------------------------------------------------------------------------------------------------------------------------------------
  # START_SUPPORT_BRANCH: true
  # RELEASE_TAG: 3.3.2

  # Start hotfix for Arkcase support
  # --------------------------------
  # START_HOTFIX: true
  # HOTFIX_SUPPORT_VERSION: 3.3.2 (**** keep this version for all additional hotfixes to the same base released version ****)
  # RELEASE_VERSION: 3.3.2.1       (**** increment this version for additional hotfixes like 3.3.2.2 ****)

  # Release new hotfix version
  # --------------------------
  # RELEASE_HOTFIX: true
  # HOTFIX_SUPPORT_VERSION: 3.3.2
  # RELEASE_VERSION: 3.3.2.1
  GIT_USERNAME: 'Arkcase Build'
  GIT_USERMAIL: 'arkcase-build@armedia.com'
  GIT_URL: 'git@gitlab.armedia.com:arkcase/ArkCase.git'


release_candidate_1:
  stage: release
  only: 
    variables:
     - $RELEASE_CANDIDATE_1
  script:
    - echo '<settings>' > /root/.m2/settings.xml
    - echo '  <servers>' >> /root/.m2/settings.xml
    - echo '    <server>' >> /root/.m2/settings.xml
    - echo '      <id>arkcase.release</id>' >> /root/.m2/settings.xml
    - echo '      <username>admin</username>' >> /root/.m2/settings.xml
    - echo "      <password>$MVN_PASSWORD</password>" >> /root/.m2/settings.xml
    - echo '    </server>' >> /root/.m2/settings.xml
    - echo '  </servers>' >> /root/.m2/settings.xml
    - echo '</settings>' >> /root/.m2/settings.xml
    - export MAVEN_OPTS="-Xmx2048M -Xss256M -XX:MetaspaceSize=2048M -XX:+CMSClassUnloadingEnabled"
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - apt-get update
    - apt-get install -y zip sshpass
    - export SSHPASS=$SSHPASS_ARKCASE
    # Trigger other project releases:
    # Configuration
    # Portal backend
    # Portal UI
    # Config server
    # Snowbound???
    # Installer
    # Arkcase
    - mvn -B gitflow:release-start -DreleaseVersion=$RELEASE_VERSION -DcommitDevelopmentVersionAtStart=true -DdevelopmentVersion=$DEVELOP_NEW_VERSION
    - mvn -B gitflow:release-finish -DskipTestProject=true -DcommitDevelopmentVersionAtStart=true
    - git checkout master
    - mvn -DskipITs -T 4 -B deploy "-DaltDeploymentRepository=arkcase.release::default::https://project.armedia.com/nexus/repository/arkcase.release/"
    - sshpass -e sftp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null arkcase@fileshare.armedia.com <<< $'put acm-standard-applications/acm-law-enforcement/target/*.war /from-arkcase/arkcase-'$RELEASE-VERSION'.war' 
    # Deploy on test servers
    
start_release_candidate_X:
  stage: release
  only: 
    variables:
     - $START_RELEASE_CANDIDATE_X
  script:
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - mvn -B gitflow:hotfix-start -DpushRemote=true -DhotfixVersion=$RELEASE_VERSION

release_candidate_X:
  stage: release
  only: 
    variables:
     - $RELEASE_CANDIDATE_X
  script:
    - echo '<settings>' > /root/.m2/settings.xml
    - echo '  <servers>' >> /root/.m2/settings.xml
    - echo '    <server>' >> /root/.m2/settings.xml
    - echo '      <id>arkcase.release</id>' >> /root/.m2/settings.xml
    - echo '      <username>admin</username>' >> /root/.m2/settings.xml
    - echo "      <password>$MVN_PASSWORD</password>" >> /root/.m2/settings.xml
    - echo '    </server>' >> /root/.m2/settings.xml
    - echo '  </servers>' >> /root/.m2/settings.xml
    - echo '</settings>' >> /root/.m2/settings.xml
    - export MAVEN_OPTS="-Xmx2048M -Xss256M -XX:MetaspaceSize=2048M -XX:+CMSClassUnloadingEnabled"
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - apt-get update
    - apt-get install -y zip sshpass
    - export SSHPASS=$SSHPASS_ARKCASE
    # Trigger other project releases:
    # Configuration
    # Portal backend
    # Portal UI
    # Config server
    # Snowbound???
    # Installer
    - mvn -B gitflow:hotfix-finish -DpushRemote=true -DhotfixVersion=$RELEASE_VERSION -DskipTestProject=true -DskipMergeDevBranch=true
    - git checkout master
    - mvn -DskipITs -T 4 -B deploy "-DaltDeploymentRepository=arkcase.release::default::https://project.armedia.com/nexus/repository/arkcase.release/"
    - sshpass -e sftp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null arkcase@fileshare.armedia.com <<< $'put acm-standard-applications/acm-law-enforcement/target/*.war /from-arkcase/arkcase-'$RELEASE-VERSION'.war' 
    # Deploy on test servers

release:
  stage: release
  only: 
    variables:
     - $RELEASE
  script:
    - echo '<settings>' > /root/.m2/settings.xml
    - echo '  <servers>' >> /root/.m2/settings.xml
    - echo '    <server>' >> /root/.m2/settings.xml
    - echo '      <id>arkcase.release</id>' >> /root/.m2/settings.xml
    - echo '      <username>admin</username>' >> /root/.m2/settings.xml
    - echo "      <password>$MVN_PASSWORD</password>" >> /root/.m2/settings.xml
    - echo '    </server>' >> /root/.m2/settings.xml
    - echo '  </servers>' >> /root/.m2/settings.xml
    - echo '</settings>' >> /root/.m2/settings.xml
    - export MAVEN_OPTS="-Xmx2048M -Xss256M -XX:MetaspaceSize=2048M -XX:+CMSClassUnloadingEnabled"
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - apt-get update
    - apt-get install -y zip sshpass
    - export SSHPASS=$SSHPASS_ARKCASE
    # Trigger other project releases:
    # Configuration
    # Portal backend
    # Portal UI
    # Config server
    # Snowbound???
    # Installer
    - mvn -B gitflow:hotfix-start -DhotfixVersion=$RELEASE_VERSION
    - mvn -B gitflow:hotfix-finish -DhotfixVersion=$RELEASE_VERSION -DskipTestProject=true -DskipMergeDevBranch=true
    - git checkout master
    - mvn -DskipITs -T 4 -B deploy "-DaltDeploymentRepository=arkcase.release::default::https://project.armedia.com/nexus/repository/arkcase.release/"
    - sshpass -e sftp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null arkcase@fileshare.armedia.com <<< $'put acm-standard-applications/acm-law-enforcement/target/*.war /from-arkcase/arkcase-'$RELEASE-VERSION'.war' 
    # Deploy on test servers
    
start_support_branch:
  stage: release
  only: 
    variables:
     - $START_SUPPORT_BRANCH
  script:
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - mvn -B gitflow:support-start -DpushRemote=true -DtagName=$RELEASE_TAG

start_hotfix:
  stage: release
  only: 
    variables:
     - $START_HOTFIX
  script:
    - mvn -B gitflow:hotfix-start -DpushRemote=true -DhotfixVersion=$RELEASE_VERSION -DfromBranch=support/$HOTFIX_SUPPORT_VERSION

release_hotfix:
  stage: release
  only: 
    variables:
     - $RELEASE_HOTFIX
  script:
    - echo '<settings>' > /root/.m2/settings.xml
    - echo '  <servers>' >> /root/.m2/settings.xml
    - echo '    <server>' >> /root/.m2/settings.xml
    - echo '      <id>arkcase.release</id>' >> /root/.m2/settings.xml
    - echo '      <username>admin</username>' >> /root/.m2/settings.xml
    - echo "      <password>$MVN_PASSWORD</password>" >> /root/.m2/settings.xml
    - echo '    </server>' >> /root/.m2/settings.xml
    - echo '  </servers>' >> /root/.m2/settings.xml
    - echo '</settings>' >> /root/.m2/settings.xml
    - export MAVEN_OPTS="-Xmx2048M -Xss256M -XX:MetaspaceSize=2048M -XX:+CMSClassUnloadingEnabled"
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - apt-get update
    - apt-get install -y zip sshpass
    - export SSHPASS=$SSHPASS_ARKCASE
    # Trigger other project releases:
    # Configuration
    # Portal backend
    # Portal UI
    # Config server
    # Snowbound???
    # Installer
    - mvn -B gitflow:hotfix-finish -DpushRemote=true -DhotfixVersion=support/$HOTFIX_SUPPORT_VERSION/$RELEASE_VERSION -DskipTestProject=true -DskipMergeDevBranch=true
    - git checkout --track origin/support/$HOTFIX_SUPPORT_VERSION/$RELEASE_VERSION
    - mvn -DskipITs -T 4 -B deploy "-DaltDeploymentRepository=arkcase.release::default::https://project.armedia.com/nexus/repository/arkcase.release/"
    - sshpass -e sftp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null arkcase@fileshare.armedia.com <<< $'put acm-standard-applications/acm-law-enforcement/target/*.war /from-arkcase/arkcase-'$RELEASE-VERSION'.war' 
    # Deploy on test servers
