variables:
  # Release new Arkcase version
  # ============================

  # Start a release branch from develop branch. Sets the develop branch to new snapshot version
  # --------------------------------------------------------------------------------------------
  # RELEASE_START: true
  # RELEASE_VERSION: 3.3.3
  # DEVELOP_NEW_VERSION: 3.3.4-SNAPSHOT
  # RELEASE_ALL: true (Optional: if you want to trigger the release pipeline on all othe projects: configuration, externa-portal-ui, external-portal-backend, configuration server)

  # Release RC1 (X) from release branch
  # -----------------------------------
  # RELEASE_CANDIDATE_X: true
  # RELEASE_VERSION: 3.3.3
  # RELEASE_CANDIDATE_SUFFIX: RC1
  # RELEASE_ALL: true (Optional: if you want to trigger the release pipeline on all othe projects: configuration, externa-portal-ui, external-portal-backend, configuration server)

  # Release final version, merges release branch in master (after no more release candidates are planned)
  # -----------------------------------------------------------------------------------------------------
  # RELEASE: true
  # RELEASE_VERSION: 3.3.3
  # RELEASE_ALL: true (Optional: if you want to trigger the release pipeline on all othe projects: configuration, externa-portal-ui, external-portal-backend, configuration server)


  # Hotfix for older Arkcase released version
  # =========================================

  # Start support branch for a released Arkcase version (creates support/3.3.2 branch which can be used for all future release fixes for 3.3.2 version)
  # ---------------------------------------------------------------------------------------------------------------------------------------------------
  # START_SUPPORT_BRANCH: true
  # RELEASE_TAG: 3.3.2
  # RELEASE_ALL: true (Optional: if you want to trigger the release pipeline on all othe projects: configuration, externa-portal-ui, external-portal-backend, configuration server)

  # Start hotfix for Arkcase support
  # --------------------------------
  # START_HOTFIX: true
  # HOTFIX_SUPPORT_VERSION: 3.3.2 (**** keep this version for all additional hotfixes to the same base released version ****)
  # RELEASE_VERSION: 3.3.2.1       (**** increment this version for additional hotfixes like 3.3.2.2 ****)
  # RELEASE_ALL: true (Optional: if you want to trigger the release pipeline on all othe projects: configuration, externa-portal-ui, external-portal-backend, configuration server)

  # Release new hotfix version
  # --------------------------
  # RELEASE_HOTFIX: true
  # HOTFIX_SUPPORT_VERSION: 3.3.2
  # RELEASE_VERSION: 3.3.2.1
  # RELEASE_ALL: true (Optional: if you want to trigger the release pipeline on all othe projects: configuration, externa-portal-ui, external-portal-backend, configuration server)
  GIT_USERNAME: 'Arkcase Build'
  GIT_USERMAIL: 'arkcase-build@armedia.com'
  GIT_URL: 'git@gitlab.armedia.com:arkcase/ArkCase.git'


release_start:
  stage: release
  only: 
    variables:
     - $RELEASE_START
  script:
    - echo '<settings>' > /root/.m2/settings.xml
    - echo '  <servers>' >> /root/.m2/settings.xml
    - echo '    <server>' >> /root/.m2/settings.xml
    - echo '      <id>arkcase.release</id>' >> /root/.m2/settings.xml
    - echo '      <username>admin</username>' >> /root/.m2/settings.xml
    - echo "      <password>$MVN_PASSWORD</password>" >> /root/.m2/settings.xml
    - echo '    </server>' >> /root/.m2/settings.xml
    - echo '  </servers>' >> /root/.m2/settings.xml
    - echo '</settings>' >> /root/.m2/settings.xml
    - export MAVEN_OPTS="-Xmx2048M -Xss256M -XX:MetaspaceSize=2048M -XX:+CMSClassUnloadingEnabled"
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - apt-get update
    - apt-get install -y zip sshpass
    - export SSHPASS=$SSHPASS_ARKCASE
    - mvn -B gitflow:release-start -DpushRemote=true -DreleaseVersion=$RELEASE_VERSION -DcommitDevelopmentVersionAtStart=true -DdevelopmentVersion=$DEVELOP_NEW_VERSION
    # Deploy on test servers
    
release_candidate_X:
  stage: release
  only: 
    variables:
     - $RELEASE_CANDIDATE_X
  script:
    - echo '<settings>' > /root/.m2/settings.xml
    - echo '  <servers>' >> /root/.m2/settings.xml
    - echo '    <server>' >> /root/.m2/settings.xml
    - echo '      <id>arkcase.release</id>' >> /root/.m2/settings.xml
    - echo '      <username>admin</username>' >> /root/.m2/settings.xml
    - echo "      <password>$MVN_PASSWORD</password>" >> /root/.m2/settings.xml
    - echo '    </server>' >> /root/.m2/settings.xml
    - echo '  </servers>' >> /root/.m2/settings.xml
    - echo '</settings>' >> /root/.m2/settings.xml
    - export MAVEN_OPTS="-Xmx2048M -Xss256M -XX:MetaspaceSize=2048M -XX:+CMSClassUnloadingEnabled"
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - apt-get update
    - apt-get install -y zip sshpass
    - export SSHPASS=$SSHPASS_ARKCASE
    - curl --silent --create-dirs -o /usr/share/maven/lib/ext/pom-manipulation-ext-3.8.1.jar https://repo1.maven.org/maven2/org/commonjava/maven/ext/pom-manipulation-ext/3.8.1/pom-manipulation-ext-3.8.1.jar
    - git checkout release/$RELEASE_VERSION
    - git push origin HEAD:refs/tags/$RELEASE_VERSION-$RELEASE_CANDIDATE_SUFFIX
    - mvn -DskipTests -T 4 -B deploy "-DaltDeploymentRepository=arkcase.release::default::https://project.armedia.com/nexus/repository/arkcase.release/" -DversionOverride=$RELEASE_VERSION-$RELEASE_CANDIDATE_SUFFIX -DversionOsgi=false
    - sshpass -e sftp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null arkcase@fileshare.armedia.com <<< $'put acm-standard-applications/acm-law-enforcement/target/*.war /from-arkcase/arkcase-'$RELEASE_VERSION-$RELEASE_CANDIDATE_SUFFIX'.war' 
    # Deploy on test servers

release:
  stage: release
  only: 
    variables:
     - $RELEASE
  script:
    - echo '<settings>' > /root/.m2/settings.xml
    - echo '  <servers>' >> /root/.m2/settings.xml
    - echo '    <server>' >> /root/.m2/settings.xml
    - echo '      <id>arkcase.release</id>' >> /root/.m2/settings.xml
    - echo '      <username>admin</username>' >> /root/.m2/settings.xml
    - echo "      <password>$MVN_PASSWORD</password>" >> /root/.m2/settings.xml
    - echo '    </server>' >> /root/.m2/settings.xml
    - echo '  </servers>' >> /root/.m2/settings.xml
    - echo '</settings>' >> /root/.m2/settings.xml
    - export MAVEN_OPTS="-Xmx2048M -Xss256M -XX:MetaspaceSize=2048M -XX:+CMSClassUnloadingEnabled"
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - apt-get update
    - apt-get install -y zip sshpass
    - export SSHPASS=$SSHPASS_ARKCASE
    - mvn -B gitflow:release-finish -DskipTestProject=true -DcommitDevelopmentVersionAtStart=true
    - git checkout master
    - mvn -DskipITs -T 4 -B deploy "-DaltDeploymentRepository=arkcase.release::default::https://project.armedia.com/nexus/repository/arkcase.release/"
    - sshpass -e sftp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null arkcase@fileshare.armedia.com <<< $'put acm-standard-applications/acm-law-enforcement/target/*.war /from-arkcase/arkcase-'$RELEASE_VERSION'.war' 
    # Deploy on test servers
    
start_support_branch:
  stage: release
  only: 
    variables:
     - $START_SUPPORT_BRANCH
  script:
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - mvn -B gitflow:support-start -DpushRemote=true -DtagName=$RELEASE_TAG

start_hotfix:
  stage: release
  only: 
    variables:
     - $START_HOTFIX
  script:
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - git checkout support/$HOTFIX_SUPPORT_VERSION
    - mvn -B gitflow:hotfix-start -DpushRemote=true -DhotfixVersion=$RELEASE_VERSION -DfromBranch=support/$HOTFIX_SUPPORT_VERSION

release_hotfix:
  stage: release
  only: 
    variables:
     - $RELEASE_HOTFIX
  script:
    - echo '<settings>' > /root/.m2/settings.xml
    - echo '  <servers>' >> /root/.m2/settings.xml
    - echo '    <server>' >> /root/.m2/settings.xml
    - echo '      <id>arkcase.release</id>' >> /root/.m2/settings.xml
    - echo '      <username>admin</username>' >> /root/.m2/settings.xml
    - echo "      <password>$MVN_PASSWORD</password>" >> /root/.m2/settings.xml
    - echo '    </server>' >> /root/.m2/settings.xml
    - echo '  </servers>' >> /root/.m2/settings.xml
    - echo '</settings>' >> /root/.m2/settings.xml
    - export MAVEN_OPTS="-Xmx2048M -Xss256M -XX:MetaspaceSize=2048M -XX:+CMSClassUnloadingEnabled"
    - git config --global user.name "$GIT_USERNAME"
    - git config --global user.email "$GIT_USERMAIL"
    - git remote set-url origin "$GIT_URL"
    - apt-get update
    - apt-get install -y zip sshpass
    - export SSHPASS=$SSHPASS_ARKCASE
    - git checkout hotfix/support/$HOTFIX_SUPPORT_VERSION/$RELEASE_VERSION
    - git checkout support/$HOTFIX_SUPPORT_VERSION
    - mvn -B gitflow:hotfix-finish -DpushRemote=true -DhotfixVersion=support/$HOTFIX_SUPPORT_VERSION/$RELEASE_VERSION -DskipTestProject=true -DskipMergeDevBranch=true
    - mvn -DskipITs -T 4 -B deploy "-DaltDeploymentRepository=arkcase.release::default::https://project.armedia.com/nexus/repository/arkcase.release/"
    - sshpass -e sftp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null arkcase@fileshare.armedia.com <<< $'put acm-standard-applications/acm-law-enforcement/target/*.war /from-arkcase/arkcase-'$RELEASE_VERSION'.war' 
    # Deploy on test servers

release_all:
  stage: release
  only: 
    variables:
     - $RELEASE_ALL
  script:
    # Trigger other project releases:
    # Configuration
    - curl -k --request POST --form token=$CONFIGURATION_PROJECT_TOKEN --form ref=core
      --form "variables[RELEASE_START]=$RELEASE_START"
      --form "variables[RELEASE_VERSION]=$RELEASE_VERSION"
      --form "variables[DEVELOP_NEW_VERSION]=$DEVELOP_NEW_VERSION"
      --form "variables[RELEASE_CANDIDATE_X]=$RELEASE_CANDIDATE_X"
      --form "variables[RELEASE_CANDIDATE_SUFFIX]=$RELEASE_CANDIDATE_SUFFIX"
      --form "variables[RELEASE]=$RELEASE"
      --form "variables[START_SUPPORT_BRANCH]=$START_SUPPORT_BRANCH"
      --form "variables[RELEASE_TAG]=$RELEASE_TAG"
      --form "variables[START_HOTFIX]=$START_HOTFIX"
      --form "variables[HOTFIX_SUPPORT_VERSION]=$HOTFIX_SUPPORT_VERSION"
      --form "variables[RELEASE_HOTFIX]=$RELEASE_HOTFIX"
      https://gitlab.armedia.com/api/v4/projects/30/trigger/pipeline
    # Portal backend
    - curl -k --request POST --form token=$EXTERNAL_WEB_PORTAL_PROJECT_TOKEN --form ref=develop
      --form "variables[RELEASE_VERSION]=$RELEASE_VERSION"
      --form "variables[DEVELOP_NEW_VERSION]=$DEVELOP_NEW_VERSION"
      --form "variables[RELEASE_CANDIDATE_X]=$RELEASE_CANDIDATE_X"
      --form "variables[RELEASE_CANDIDATE_SUFFIX]=$RELEASE_CANDIDATE_SUFFIX"
      --form "variables[RELEASE]=$RELEASE"
      --form "variables[START_SUPPORT_BRANCH]=$START_SUPPORT_BRANCH"
      --form "variables[RELEASE_TAG]=$RELEASE_TAG"
      --form "variables[START_HOTFIX]=$START_HOTFIX"
      --form "variables[HOTFIX_SUPPORT_VERSION]=$HOTFIX_SUPPORT_VERSION"
      --form "variables[RELEASE_HOTFIX]=$RELEASE_HOTFIX"
      https://gitlab.armedia.com/api/v4/projects/193/trigger/pipeline
    # Portal UI
    - curl -k --request POST --form token=$EXTERNAL_WEB_PORTAL_UI_PROJECT_TOKEN --form ref=develop
      --form "variables[RELEASE_VERSION]=$RELEASE_VERSION"
      --form "variables[DEVELOP_NEW_VERSION]=$DEVELOP_NEW_VERSION"
      --form "variables[RELEASE_CANDIDATE_X]=$RELEASE_CANDIDATE_X"
      --form "variables[RELEASE_CANDIDATE_SUFFIX]=$RELEASE_CANDIDATE_SUFFIX"
      --form "variables[RELEASE]=$RELEASE"
      --form "variables[START_SUPPORT_BRANCH]=$START_SUPPORT_BRANCH"
      --form "variables[RELEASE_TAG]=$RELEASE_TAG"
      --form "variables[START_HOTFIX]=$START_HOTFIX"
      --form "variables[HOTFIX_SUPPORT_VERSION]=$HOTFIX_SUPPORT_VERSION"
      --form "variables[RELEASE_HOTFIX]=$RELEASE_HOTFIX"
      https://gitlab.armedia.com/api/v4/projects/237/trigger/pipeline
    # Config server
    - curl -k --request POST --form token=$CONFIG_SERVER_PROJECT_TOKEN --form ref=develop
      --form "variables[RELEASE_VERSION]=$RELEASE_VERSION"
      --form "variables[DEVELOP_NEW_VERSION]=$DEVELOP_NEW_VERSION"
      --form "variables[RELEASE_CANDIDATE_X]=$RELEASE_CANDIDATE_X"
      --form "variables[RELEASE_CANDIDATE_SUFFIX]=$RELEASE_CANDIDATE_SUFFIX"
      --form "variables[RELEASE]=$RELEASE"
      --form "variables[START_SUPPORT_BRANCH]=$START_SUPPORT_BRANCH"
      --form "variables[RELEASE_TAG]=$RELEASE_TAG"
      --form "variables[START_HOTFIX]=$START_HOTFIX"
      --form "variables[HOTFIX_SUPPORT_VERSION]=$HOTFIX_SUPPORT_VERSION"
      --form "variables[RELEASE_HOTFIX]=$RELEASE_HOTFIX"
      https://gitlab.armedia.com/api/v4/projects/322/trigger/pipeline
    # Snowbound
    - curl -k --request POST --form token=$SNOWBOUND_PROJECT_TOKEN --form ref=snowbound-4.10
      --form "variables[RELEASE_VERSION]=$RELEASE_VERSION"
      --form "variables[DEVELOP_NEW_VERSION]=$DEVELOP_NEW_VERSION"
      --form "variables[RELEASE_CANDIDATE_X]=$RELEASE_CANDIDATE_X"
      --form "variables[RELEASE_CANDIDATE_SUFFIX]=$RELEASE_CANDIDATE_SUFFIX"
      --form "variables[RELEASE]=$RELEASE"
      --form "variables[START_SUPPORT_BRANCH]=$START_SUPPORT_BRANCH"
      --form "variables[RELEASE_TAG]=$RELEASE_TAG"
      --form "variables[START_HOTFIX]=$START_HOTFIX"
      --form "variables[HOTFIX_SUPPORT_VERSION]=$HOTFIX_SUPPORT_VERSION"
      --form "variables[RELEASE_HOTFIX]=$RELEASE_HOTFIX"
      https://gitlab.armedia.com/api/v4/projects/39/trigger/pipeline
    # Installer