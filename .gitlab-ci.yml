variables:
  GIT_SSL_NO_VERIFY: "true"
  GIT_STRATEGY: fetch
  
  # Deploy Arkcase version on a target server Run Pipeline from web and set the following variables:
  # ------------------------------------------------------------------------------------------------
  # DEPLOY_SERVER: true 
  # SERVER_IP: 10.60.24.40
  # SSH_USER: loc.arkcasemgmtsvc
  # SSH_PASSWORD: some_password
  # ARKCASE_VERSION: 3.3.2-RC1
  # ARKCASE_REPOSITORY: armedia.release
  # ARKCASE_SERVICE_USER_NAME: arkuser
  # ENVIRONMENT_NAME: Core Test
  # ENVIRONMENT_URL: https://test.core.arkcase.com
  
  # Release Arkcase version
  #RELEASE: true
  RELEASE_SOURCE_BRANCH: develop
  RELEASE_VERSION: 3.3.2-rc1
  DEVELOP_NEW_VERSION: 3.3.3-SNAPSHOT
  #Examples for release:
  #RELEASE_SOURCE_BRANCH: arkcase_3.3.2-rc1
  #RELEASE_VERSION: 3.3.2-rc2
  #DEVELOP_NEW_VERSION:
  #RELEASE_SOURCE_BRANCH: arkcase_3.3.2-rc2
  #RELEASE_VERSION: 3.3.2-r1
  #DEVELOP_NEW_VERSION:
   

image: arkcase-gitlab-ci:1.0.1

stages:
  - build
  - deploy
  - trigger
  - restart
  - release
  
.build_backend_snapshot:
  stage: build
  script:
    # build war file and deploy to Nexus Snapshots
    - export MAVEN_OPTS="-Xmx2048M -Xss256M -XX:MetaspaceSize=2048M -XX:+CMSClassUnloadingEnabled"
    - mvn -DskipITs -T 4 -B deploy "-Drelease-repository.url=https://project.armedia.com/nexus/repository/armedia.snapshot/" "-Drelease-repository.id=armedia.snapshot" "-Drelease-repository.name=Armedia Snapshots repository"

.build_frontend_snapshot:
  stage: build
  script:
    - export MAVEN_OPTS="-Xmx2048M -Xss256M -XX:MetaspaceSize=2048M -XX:+CMSClassUnloadingEnabled"
    - git clone git@gitlab.armedia.com:arkcase/arkcase-ui-core-app.git
    - cd arkcase-ui-core-app
    - git checkout experimental
    # build ui-core variant
    - /bin/cp -f $BUILD_CORE_ARTIFACTS_DIRECTORY/build.env ./.env
    - /bin/cp -f $BUILD_CORE_ARTIFACTS_DIRECTORY/local*.js ./config/
    - /bin/cp -f $BUILD_CORE_ARTIFACTS_DIRECTORY/default*.js ./config/
    - npm install
    - npm run convert
    - npm run build:prod
    - /bin/cp -f $BUILD_CORE_ARTIFACTS_DIRECTORY/pom.xml .
    - /bin/cp -f $BUILD_CORE_ARTIFACTS_DIRECTORY/assembly.xml .
    - mvn -B clean deploy "-Drelease-repository.url=https://project.armedia.com/nexus/repository/armedia.snapshot/" "-Drelease-repository.id=armedia.snapshot" "-Drelease-repository.name=Armedia Snapshots repository"
    # build ui-foia variant
    - /bin/cp -f $BUILD_FOIA_ARTIFACTS_DIRECTORY/build.env ./.env
    - /bin/cp -f $BUILD_FOIA_ARTIFACTS_DIRECTORY/local*.js ./config/
    - /bin/cp -f $BUILD_FOIA_ARTIFACTS_DIRECTORY/default*.js ./config/
    - npm install
    - npm run convert
    - npm run build:prod
    - /bin/cp -f $BUILD_FOIA_ARTIFACTS_DIRECTORY/pom.xml .
    - /bin/cp -f $BUILD_FOIA_ARTIFACTS_DIRECTORY/assembly.xml .
    - mvn -B clean deploy "-Drelease-repository.url=https://project.armedia.com/nexus/repository/armedia.snapshot/" "-Drelease-repository.id=armedia.snapshot" "-Drelease-repository.name=Armedia Snapshots repository"

.build_artifact:
  stage: build
  script:
    - mvn -DskipITs clean install
  artifacts:
    paths:
      - target/*.war
    
.build_feature:
  extends: .build_artifact
  only:
    - feature/*

.deploy_backend:
  stage: deploy
  script:
    # get arkcase.war version from Nexus
    - mvn -B dependency:get -DremoteRepositories=http://project.armedia.com/nexus/repository/$ARKCASE_REPOSITORY -DgroupId=com.armedia.acm.acm-standard-applications -DartifactId=acm-law-enforcement -Dversion=$ARKCASE_VERSION -Dpackaging=war -Dtransitive=false
    - mvn -B dependency:copy -Dartifact=com.armedia.acm.acm-standard-applications:acm-law-enforcement:$ARKCASE_VERSION:war -DoutputDirectory=.
    - mv acm-law-enforcement-*.war arkcase.war
    # copy artifacts to the environment
    - export SSHPASS=$SSH_PASSWORD
    - sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null arkcase.war $SSH_USER@$SERVER_IP:/home/$SSH_USER/
    - sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SSH_USER@$SERVER_IP "sudo cp /home/$SSH_USER/arkcase.war ~$ARKCASE_SERVICE_USER_NAME/ ; sudo chown $ARKCASE_SERVICE_USER_NAME:$ARKCASE_SERVICE_USER_NAME ~$ARKCASE_SERVICE_USER_NAME/arkcase.war"
    # deploy files
    - sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SSH_USER@$SERVER_IP "sudo su -c \"bash ~$ARKCASE_SERVICE_USER_NAME/redeploy_acm_backend.sh\" $ARKCASE_SERVICE_USER_NAME"
    # verify Arkcase is started
    #- nslookup $CI_ENVIRONMENT_URL/
    - wget --no-check-certificate $CI_ENVIRONMENT_URL/arkcase -O /dev/null
    - ARKCASE_RESULT=$?
    - if [ "$ARKCASE_RESULT" != "0" ]; then echo "ArkCase war did not start on the remote host $CI_ENVIRONMENT_URL/"; fi
    - exit $ARKCASE_RESULT

.deploy_frontend:
  stage: deploy
  script:
    # download ui from Nexus
    - mvn -B dependency:get -DremoteRepositories=http://project.armedia.com/nexus/repository/$ARKCASE_REPOSITORY -DgroupId=com.armedia.acm -DartifactId=$ARKCASE_UI_VARIANT -Dversion=$ARKCASE_VERSION -Dpackaging=zip -Dtransitive=false
    - mvn -B dependency:copy -Dartifact=com.armedia.acm:$ARKCASE_UI_VARIANT:$ARKCASE_VERSION:zip -DoutputDirectory=.
    - mv ui-*.zip ui.zip
    # copy artifacts to the environment
    - export SSHPASS=$SSH_PASSWORD
    - sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ui.zip $SSH_USER@$SERVER_IP:/home/$SSH_USER/
    - sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SSH_USER@$SERVER_IP "sudo cp /home/$SSH_USER/ui.zip ~$ARKCASE_SERVICE_USER_NAME/ ; sudo chown $ARKCASE_SERVICE_USER_NAME:$ARKCASE_SERVICE_USER_NAME ~$ARKCASE_SERVICE_USER_NAME/ui.zip"
    # deploy files
    - sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SSH_USER@$SERVER_IP "sudo su -c \"bash ~$ARKCASE_SERVICE_USER_NAME/redeploy_acm_frontend.sh\" $ARKCASE_SERVICE_USER_NAME"

build_backend_develop:
  extends: .build_backend_snapshot
  only:
    - develop
  except:
    changes:
      #- .gitlab-ci.yaml

.build_frontend_develop:
  extends: .build_frontend_snapshot
  only:
    - develop
  variables:
    BUILD_CORE_ARTIFACTS_DIRECTORY: ../acm-standard-applications/acm-law-enforcement/src/main/webapp/build
    BUILD_FOIA_ARTIFACTS_DIRECTORY: ../acm-standard-applications/acm-foia/src/main/resources/build
  except:
    changes:
      #- .gitlab-ci.yaml

deploy_server:
  extends: .deploy_backend
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "web"
      - $DEPLOY_SERVER
  environment:
    name: $ENVIRONMENT_NAME
    url: $ENVIRONMENT_URL

deploy_backend_core_dev:
  extends: .deploy_backend
  only:
    - develop
  except:
    changes:
      #- .gitlab-ci.yaml
  environment:
    name: Dev Core
    url: https://dev.core.arkcase.com
  variables:
    SERVER_IP: 10.60.24.39
    SSH_USER: loc.arkcasemgmtsvc
    SSH_PASSWORD: $ARKCASEMGMTSCV_PASSWORD
    ARKCASE_VERSION: 3.3.3-SNAPSHOT
    ARKCASE_REPOSITORY: armedia.snapshot
    ARKCASE_SERVICE_USER_NAME: arkuser

deploy_backend_bcgeu_dev:
  extends: .deploy_backend
  only:
    - develop
  except:
    changes:
      #- .gitlab-ci.yaml
  environment:
    name: Dev BCGEU
    url: https://dev.bcgeu.arkcase.com
  variables:
    SERVER_IP: 10.60.30.34
    SSH_USER: loc.arkcasemgmtsvc
    SSH_PASSWORD: $ARKCASEMGMTSCV_PASSWORD
    ARKCASE_VERSION: 3.3.3-SNAPSHOT
    ARKCASE_REPOSITORY: armedia.snapshot
    ARKCASE_SERVICE_USER_NAME: arkuser
    
.trigger_bcgeu_develop_pipeline:
  stage: trigger
  only:
    - develop
  except:
    changes:
      #- .gitlab-ci.yaml
  script:
   # Tokens can be found and created on gitlab -> project -> Settings -> CI/CD -> Pipeline triggers
   - curl -k -X POST -F token=aad47ac2d56cb4a15d1b2054f771c7 -F ref=webpack https://gitlab.armedia.com/api/v4/projects/381/trigger/pipeline
   #- curl -k -X POST -F token=aad47ac2d56cb4a15d1b2054f771c7 -F ref=develop https://gitlab.armedia.com/api/v4/projects/381/trigger/pipeline
            
.deploy_frontend_core_dev:
  extends: .deploy_frontend
  only:
    - develop
  except:
    changes:
      #- .gitlab-ci.yaml
  environment:
    name: Dev Core
    url: https://dev.core.arkcase.com
  variables:
    SERVER_IP: 10.60.24.39
    SSH_USER: loc.arkcasemgmtsvc
    SSH_PASSWORD: $ARKCASEMGMTSCV_PASSWORD
    ARKCASE_VERSION: 3.3.3-SNAPSHOT
    ARKCASE_REPOSITORY: armedia.snapshot
    ARKCASE_UI_VARIANT: ui-core
    ARKCASE_SERVICE_USER_NAME: arkuser
    
.deploy_foia_dev:
  extends: .deploy_backend
  only:
    - develop
  except:
    changes:
      - .gitlab-ci.yaml
  environment:
    name: Dev FOIA
    url: https://dev.foia.arkcase.com
  variables:
    SERVER_IP: 10.21.10.25
    SSH_USER: loc.arkcasemgmtsvc
    SSH_PASSWORD: $ARKCASEMGMTSCV_PASSWORD
    ARKCASE_VERSION: 3.3.3-SNAPSHOT
    ARKCASE_REPOSITORY: armedia.snapshot
    ARKCASE_UI_VARIANT: ui-foia
    ARKCASE_SERVICE_USER_NAME: arkuser

.restart:
  stage: restart
  script:
    # Connect to environment
    # shutdown arkcase
    # startup arkcase
    # verify started
    - not blank job
  when: manual
  
release:
  stage: release
  only: 
    variables:
     - $RELEASE
  script:
    # create $RELEASE BRANCH
    # update poms with new version $RELEASE_VERSION
    # commit and push
    # build the code and upload to Nexus
    # deploy to test server ?
    # update poms in develop branch to new SNAPSHOT version
    - not blank job