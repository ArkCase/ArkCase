<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-mail="http://www.springframework.org/schema/integration/mail"
       xmlns:util="http://www.springframework.org/schema/util" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- if we add task executor in publish-subscribe-channel than all mail processing will be done async,
    that would be needed if we are dealing with lot of incoming mails-->
    <int:publish-subscribe-channel id="mailChannelCaseFile"/>

    <int-mail:inbound-channel-adapter id="emailReceiverAdapterCaseFile"
                                      store-uri="imaps://${email.CASE_FILE.user}:${email.CASE_FILE.password}@${email.host}:${email.port}/${email.fetch.folder}"
                                      channel="mailChannelCaseFile"
                                      auto-startup="true" should-delete-messages="${email.should-delete-messages}"
                                      should-mark-messages-as-read="${email.should-mark-messages-as-read}"
                                      java-mail-properties="javaMailPropertiesCaseFile" max-fetch-size="1">
        <int:poller max-messages-per-poll="${email.max-messages-per-poll}" fixed-rate="${email.fixed-rate}"
                    error-channel="mailErrorChannelCaseFile"/>
    </int-mail:inbound-channel-adapter>

    <bean id="loggingHandlerCaseFile" class="org.springframework.integration.handler.LoggingHandler">
        <constructor-arg value="ERROR"/>
        <property name="expression" value="payload.message"/>
    </bean>

    <int:chain input-channel="mailErrorChannelCaseFile">
        <int:service-activator ref="loggingHandlerCaseFile" method="handleMessage"/>
    </int:chain>

    <util:properties id="javaMailPropertiesCaseFile">
        <prop key="mail.imap.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
        <prop key="mail.imap.socketFactory.fallback">false</prop>
        <prop key="mail.store.protocol">${email.protocol}</prop>
        <prop key="mail.debug">${email.debug}</prop>
    </util:properties>


    <!-- Complaint mail channel -->
    <int:publish-subscribe-channel id="mailChannelComplaint"/>

    <int-mail:inbound-channel-adapter id="emailReceiverAdapterComplaint"
                                      store-uri="imaps://${email.COMPLAINT.user}:${email.COMPLAINT.password}@${email.host}:${email.port}/${email.fetch.folder}"
                                      channel="mailChannelComplaint"
                                      auto-startup="true" should-delete-messages="${email.should-delete-messages}"
                                      should-mark-messages-as-read="${email.should-mark-messages-as-read}"
                                      java-mail-properties="javaMailPropertiesComplaint" max-fetch-size="1">
        <int:poller max-messages-per-poll="${email.max-messages-per-poll}" fixed-rate="${email.fixed-rate}"
                    error-channel="mailErrorChannelComplaint"/>
    </int-mail:inbound-channel-adapter>

    <bean id="loggingHandlerComplaint" class="org.springframework.integration.handler.LoggingHandler">
        <constructor-arg value="ERROR"/>
        <property name="expression" value="payload.message"/>
    </bean>

    <int:chain input-channel="mailErrorChannelComplaint">
        <int:service-activator ref="loggingHandlerCaseFile" method="handleMessage"/>
    </int:chain>

    <util:properties id="javaMailPropertiesComplaint">
        <prop key="mail.imap.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
        <prop key="mail.imap.socketFactory.fallback">false</prop>
        <prop key="mail.store.protocol">${email.protocol}</prop>
        <prop key="mail.debug">${email.debug}</prop>
    </util:properties>

</beans>