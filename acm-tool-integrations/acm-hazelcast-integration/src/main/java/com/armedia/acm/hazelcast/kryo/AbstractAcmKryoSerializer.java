package com.armedia.acm.hazelcast.kryo;

import com.hazelcast.core.HazelcastInstance;
import com.hazelcast.core.HazelcastInstanceAware;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.StreamSerializer;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import info.jerrinot.subzero.internal.strategy.KryoStrategy;

public abstract class AbstractAcmKryoSerializer<T> implements StreamSerializer<T>, HazelcastInstanceAware
{
    private int autoGeneratedTypeId;
    private HazelcastInstance hazelcastInstance;
    private KryoStrategy<T> strategy;

    AbstractAcmKryoSerializer()
    {
    }

    AbstractAcmKryoSerializer(KryoStrategy<T> strategy)
    {
        this.strategy = strategy;
    }

    @Override
    public void write(ObjectDataOutput out, T object) throws IOException
    {
        strategy.write((OutputStream) out, object);
    }

    @Override
    public T read(ObjectDataInput in) throws IOException
    {
        return strategy.read((InputStream) in);
    }

    @Override
    public int getTypeId()
    {
        return autoGeneratedTypeId;
    }

    @Override
    public void destroy()
    {
        strategy.destroy(hazelcastInstance);
    }

    @Override
    public final void setHazelcastInstance(HazelcastInstance hazelcastInstance)
    {
        strategy.setHazelcastInstance(hazelcastInstance);
        this.hazelcastInstance = hazelcastInstance;
        this.autoGeneratedTypeId = strategy.newId();
    }
}