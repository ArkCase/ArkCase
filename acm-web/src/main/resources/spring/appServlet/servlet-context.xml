<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!--
		DispatcherServlet Context: defines this servlet's request-processing infrastructure
	-->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Imports user-defined @Controller beans that process client requests -->
	<!--<import resource="controllers.xml" />-->
    <mvc:view-controller path="/" view-name="home"/>
    <mvc:view-controller path="/home" view-name="home"/>
    <mvc:view-controller path="/login" view-name="login"/>
    <mvc:view-controller path="/login.html" view-name="login"/>
    <mvc:view-controller path="/portal.html" view-name="home"/>
    <mvc:view-controller path="/overview.html" view-name="home"/>

	<!-- Scan for Spring beans declared via annotations. -->
	<!--<context:component-scan base-package="com.armedia.acm.web"/>-->

    <!-- set JSON date format to ISO-8601 e.g. 1970-01-01T00:00:00.000+0000 -->
    <bean id="sourceObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
    <bean id="acmObjectMapper" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="sourceObjectMapper"/>
        <property name="targetMethod" value="disable"/>
        <property name="arguments" value="WRITE_DATES_AS_TIMESTAMPS"/>
    </bean>
    <bean id="acmJacksonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="objectMapper" ref="acmObjectMapper"/>
    </bean>

    <bean id="castorXmlMarshaller" class="org.springframework.oxm.castor.CastorMarshaller">
        <property name="ignoreExtraAttributes" value="true"/>
        <property name="ignoreExtraElements" value="true"/>
        <property name="validating" value="false"/>
        <property name="suppressNamespaces" value="true"/>
    </bean>
    
    <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="packagesToScan" value="com.armedia.**"/>
    </bean>

    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="defaultContentType" value="application/json" />
        <property name="favorPathExtension" value="true"/>
        <property name="mediaTypes">
            <props>
                <prop key="xml">text/xml</prop>
                <prop key="json">application/json</prop>
            </props>
        </property>
    </bean>

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters>
            <!-- We configure the Jackson mapper to output dates in ISO801 format. This requires adding our
            customized Jackson mapper to the list of Spring MVC message converters. But, if we just add our bean here
            all by itself, it will handle requests it should not handle, e.g. encoding strings.  So we need to add the
            other standard message converters here too, and make sure to put the customized Jackson converter AFTER the
            string converter. -->

            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                <property name="marshaller" ref="jaxb2Marshaller"/>
                <property name="unmarshaller" ref="jaxb2Marshaller"/>
            </bean>
            <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
            <ref bean="acmJacksonConverter"/>
            <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
            <!-- atom feed requires com.sun.syndication package ...   -->
            <!--<bean class="org.springframework.http.converter.feed.AtomFeedHttpMessageConverter"/>-->
            <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter"/>

        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--<context:spring-configured/>-->
    <!--<context:annotation-config/>-->

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/plugin/**"/>
            <mvc:mapping path="/api/*/plugin/**"/>
            <ref bean="acmPluginRoleBasedAccessInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/plugin/**"/>
            <mvc:mapping path="/api/**"/>
            <ref bean="acmAuditPropertyInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--
        Enable serving of classpath with Spring 3 resource serving mechanism. For example:
        /webflow-primefaces-showcase/app/resources/styles/blueprint/print.css
    -->
	<mvc:resources mapping="/resources/**" location="/resources/"  />


    <!-- File upload support -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />



    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="en"/>
    </bean>

    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang" />
    </bean>

    <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
        <property name="interceptors">
            <ref bean="localeChangeInterceptor" />
        </property>
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <!-- data access control -->
    <security:global-method-security pre-post-annotations="enabled">
        <security:expression-handler ref="mvcExpressionHandler"/>
    </security:global-method-security>

    <bean id="mvcExpressionHandler" class=
            "org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="permissionEvaluator" ref="arkPermissionEvaluator"/>
    </bean>

</beans>
