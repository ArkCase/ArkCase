#%RAML 0.8
title: ACM 3.0 API
baseUri: http://armdec6acm1.armedia.com/acm/api/{version}
version: v1

securitySchemes:
  - spring_security_form_auth:
      description: ACM3 uses Spring Security form authentication for interactive users.
      type: x-Spring Security form authentication
  - spring_security_basic_auth:
      description: ACM3 uses Spring Security basic authentication for service users.    
      type: Basic Authentication  

/plugin:
  /complaint:
    post:
      description: Create a complaint based on the complaint originator's contact information
      securedBy: [ spring_security_form_auth, spring_security_basic_auth ]
      body: 
        application/json:
          example: |
            {
              "complaintId": null,
              "originator": {
                "id": null,
                "title": "Mr.",
                "givenName": "John",
                "familyName": "Doe",
                "company": "Contoso",
                "addresses": [
                  {
                    "type": "home",
                    "streetAddress": "123 Main St.",
                    "streetAddress2": null,
                    "city": "Peoria",
                    "state": "IL",
                    "zip": "12345"
                  }
                ],
                "contactMethods": [
                  {
                    "type": "Mobile Phone",
                    "value": "123-456-7890"
                  },
                  {
                    "type": "Personal E-mail",
                    "value": "john.doe@gmail.com"
                  }
                ],
                "securityTags": ["Anonymous", "Confidential", "Top Secret"]
              }
            }
      responses:
        200:
          description: Normal response indicating the system created a new complaint
          body: 
            application/json:
              example: |
                {
                  "complaintId": 555,
                  "complaintNumber": "20140424_555",
                  "complaintStatus": "DRAFT",
                  "originator": {
                    "id": 556,
                    "status": "ACTIVE",
                    "title": "Mr.",
                    "givenName": "John",
                    "familyName": "Doe",
                    "company": "Contoso",
                    "addresses": [
                      {
                        "id": 557,
                        "type": "home",
                        "streetAddress": "123 Main St.",
                        "streetAddress2": null,
                        "city": "Peoria",
                        "state": "IL",
                        "zip": "12345"
                      }
                    ],
                    "contactMethods": [
                      {
                        "id": 558,
                        "type": "Mobile Phone",
                        "value": "123-456-7890"
                      },
                      {
                        "id": 559,
                        "type": "Personal E-mail",
                        "value": "john.doe@gmail.com"
                      }
                    ],
                    "securityTags": ["Anonymous", "Confidential", "Top Secret"]
                  }
                }
                  
              
      
        400:
          description: Usually means the request body was invalid (did not match the expected JSON format).  The response body will be empty.
    /details/{complaintId}:
      post:
        description: Update complaint details, including title, description text, type, etc.
        securedBy: [ spring_security_form_auth, spring_security_basic_auth ]
        body:
          application/json:
            example: |
              {
                "incidentDate": "2014-04-28",
                // complaintType must be a value from the "GET types" service
                "complaintType": "Agricultural",
                // complaintPriority must be a value from the "GET priorities" service
                "priority": "expedite",
                "complaintTitle": "Sample Title",
                "details": "<strong>Sample Text, properly encoding HTML within JSON</strong>"
              }
        responses:
          200:
            description: Indicates the details were saved.  Response is the complete Complaint JSON.
            body:
              application/json:
                example: |
                  {
                    "complaintId": 555,
                    "complaintNumber": "20140424_555",
                    "complaintStatus": "DRAFT",
                    "incidentDate": "2014-04-28",
                    "complaintType": "Agricultural",
                    "priority": "expedite",
                    "complaintTitle": "Sample Title",
                    "details": "<strong>Sample Text, properly encoding HTML within JSON</strong>"
                    "originator": {
                      "id": 556,
                      "status": "ACTIVE",
                      "title": "Mr.",
                      "givenName": "John",
                      "familyName": "Doe",
                      "company": "Contoso",
                      "addresses": [
                        {
                          "id": 557,
                          "type": "home",
                          "streetAddress": "123 Main St.",
                          "streetAddress2": null,
                          "city": "Peoria",
                          "state": "IL",
                          "zip": "12345"
                        }
                      ],
                      "contactMethods": [
                        {
                          "id": 558,
                          "type": "Mobile Phone",
                          "value": "123-456-7890"
                        },
                        {
                          "id": 559,
                          "type": "Personal E-mail",
                          "value": "john.doe@gmail.com"
                        }
                      ],
                      "securityTags": ["Anonymous", "Confidential", "Top Secret"]
                    }
                  }
    
    /types:
      description: Manage the list of complaint types.
      get:
        description: Retrieve array of valid complaint types.
        securedBy: [ spring_security_form_auth, spring_security_basic_auth ]
        responses:
          200:
            description: Expected response including the valid complaint types.
            body:
              application/json:
                example: |
                  [ "Domestic Dispute", "Arson", "Better Business Dispute", "Government", "Local", "Agricultural", "Pollution" ]
    /priorities:
      description: Manage the list of complaint priorities.
      get:
        description: Retrieve array of valid complaint priorities.
        securedBy: [ spring_security_form_auth, spring_security_basic_auth ]
        responses:
          200:
            description: Expected response including the valid complaint priorities.
            body:
              application/json:
                example: |
                  [ "Low", "Medium", "High" ]
                
          
    /file:
      description: Manage complaint files.
      post:
        description: Add a file to the complaint.  Submitted form must include a complaintId element, and a file[] element with the files to be uploaded.  Returns JSON suitable for consumption by the jQuery File Upload plugin.
          
        securedBy: [ spring_security_form_auth, spring_security_basic_auth ]
        body:
          multipart/form-data:
            
            
  /task:
    /forUser/{user}:
      securedBy: [ spring_security_form_auth, spring_security_basic_auth ]
      get:
        description: Get a list of active tasks for the specified user.
        responses:
          200: 
            description: expected response containing a list of tasks.
            body:
              application/json:
                example: |
                 [
                   {
                     "taskId":500,
                     "priority":0,
                     "title":"Example Task Title",
                     "dueDate":"2014-06-03",
                     "attachedToObjectType":"COMPLAINT",
                     "attachedToObjectId":495, 
                     "assignee":"ann-acm",
                     "businessProcessName":"cmComplaintWorkflow",
                     "adhocTask":false
                   }
                  ]
/users:
  /withPrivilege/{privilege}:
    securedBy: [ spring_security_form_auth, spring_security_basic_auth ]
    get:
      description: Get a list of users with the specified privilege.  Used to obtain a list of users who are authorized to perform a certain action.
      responses:
        200:
          description: expected response containing the list of users with the requested privilege.
          body:
            application/json: 
              example: |
                [{"userId":"OPIS_Admin","fullName":"OPIS Admin","firstName":"OPIS","lastName":"Admin"},
                 {"userId":"ann-acm","fullName":"Ann Administrator","firstName":"Ann","lastName":"Administrator"}]
  