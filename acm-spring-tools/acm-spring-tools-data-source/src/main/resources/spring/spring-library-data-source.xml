<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">


    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="datasourceProperties"/>
        <!-- placeholders changed due to maven using same type -->
        <property name="placeholderPrefix" value="$["/>
        <property name="placeholderSuffix" value="]"/>
    </bean>


    <bean id="datasourceProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean" >
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.acm/datasource.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <!-- following properties are the default datasource mappings.  The properties file
             should include all of these properties.  In practice there should always be a
             specific properties file; these defaults are here for reference, not to be used. -->
        <property name="properties">
            <props>
                <prop key="acm.driverClassName">oracle.jdbc.OracleDriver</prop>
                <prop key="acm.url">jdbc:oracle:thin:@localhost:1521:XE</prop>
                <prop key="acm.username">acm</prop>
                <prop key="acm.password">acm</prop>
                <prop key="acm.initialSize">5</prop>
                <prop key="acm.maxActive">10</prop>
                <prop key="acm.minIdle">2</prop>
                <prop key="acm.maxWait">10000</prop>
                <prop key="acm.testOnBorrow">true</prop>
                <prop key="acm.testOnReturn">false</prop>
                <prop key="acm.idleConnectionTestPeriodInSeconds">30</prop>
                <prop key="acm.validationQuery">select 1 from dual</prop>
                <prop key="acm.acquireRetryAttempts">30</prop>
                <prop key="acm.acquireRetryDelay">1000</prop>
            </props>
        </property>
    </bean>

    <bean id="acmDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
            destroy-method="close">
        <property name="driverClass" value="$[acm.driverClassName]"/>
        <property name="jdbcUrl" value="$[acm.url]"/>
        <!--<property name="overrideDefaultUser" value="${acm.schema}"/>-->
        <property name="user" value="$[acm.username]"/>
        <property name="password" value="$[acm.password]"/>
        <property name="initialPoolSize" value="$[acm.initialSize]"/>
        <property name="maxPoolSize" value="$[acm.maxActive]"/>
        <property name="minPoolSize" value="$[acm.minIdle]"/>
        <property name="checkoutTimeout" value="$[acm.maxWait]"/>
        <property name="testConnectionOnCheckout" value="$[acm.testOnBorrow]"/>
        <property name="testConnectionOnCheckin" value="$[acm.testOnReturn]"/>
        <property name="idleConnectionTestPeriod" value="$[acm.idleConnectionTestPeriodInSeconds]"/>
        <property name="preferredTestQuery" value="$[acm.validationQuery]"/>
        <property name="loginTimeout" value="$[acm.maxWait]"/>
        <property name="acquireRetryAttempts" value="$[acm.acquireRetryAttempts]"/>
        <property name="acquireRetryDelay" value="$[acm.acquireRetryDelay]"/>
        <property name="autoCommitOnClose" value="false"/>
        <property name="dataSourceName" value="acmDataSource"/>
        <property name="breakAfterAcquireFailure" value="false"/>
    </bean>

    <!--<bean id="loadTimeWeaver" class="org.springframework.context.weaving.DefaultContextLoadTimeWeaver"/>-->

    <bean id="acmEntityManager" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="acmDataSource"/>
        <!--<property name="loadTimeWeaver" ref="loadTimeWeaver"/>-->
        <property name="jpaDialect" ref="eclipseLinkDialect"/>
        <property name="persistenceProviderClass" value="org.eclipse.persistence.jpa.PersistenceProvider"/>
        <property name="jpaPropertyMap">
            <props>
                <prop key="eclipselink.weaving">false</prop>
            </props>
        </property>

        <!-- using * here means there can only be one persistence unit (all entities on the classpath are added
             to this persistence unit).  Perhaps we should allow the flexibility of multiple persistence units (e.g.
             multiple database schemas).  If so we will have to select a standard ACM package name format.
        -->
        <property name="packagesToScan" value="*"/>
    </bean>

    <bean id="eclipseLinkDialect" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect"/>

    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
        <property name="databasePlatform" value="$[database.platform]"/>
        <property name="generateDdl" value="false"/>
        <property name="showSql" value="$[database.platform.showSql]"/>
    </bean>

    <!-- Plain old JDBC transaction manager (use JtaTransactionManager for
         global tx) -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="acmDataSource"/>
        <property name="entityManagerFactory" ref="acmEntityManager"/>
    </bean>

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- bean post-processor for JPA annotations -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!-- generate the database structures -->
    <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="acmDataSource" />
        <property name="changeLog" value="classpath:/ddl/acm-database-changelog.xml" />
        <property name="shouldRun" value="$[schema.autoUpdate]"/>

        <!--
        contexts specifies the runtime contexts to use.
        -->
        <!--<property name="contexts" value="test, production" />-->
    </bean>


</beans>