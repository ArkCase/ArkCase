<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringSecurityFiltersConfiguredInspection -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <bean id="applicationRoleToUserGroupProperties"
          class="com.armedia.acm.reloadproperties.beans.AcmReloadablePropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/applicationRoleToUserGroup.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <!-- following properties are the default mapping of roles to
             groups.  These properties will be overwritten by properties in the
             properties file.  The properties file must have each key from the
             below list. -->
        <property name="properties">
            <props>
                <prop key="ROLE_INVESTIGATOR"></prop>
                <prop key="ROLE_INVESTIGATOR_SUPERVISOR"></prop>
                <prop key="ROLE_ANALYST"></prop>
                <prop key="ROLE_CALLCENTER"></prop>
            </props>
        </property>
    </bean>

    <bean id="acmAuthoritiesMapper" class="com.armedia.acm.auth.AcmGrantedAuthoritiesMapper" init-method="initBean">
        <property name="applicationRoleToUserGroupProperties" ref="applicationRoleToUserGroupProperties"/>
        <property name="propertyFileManager" ref="propertyFileManager"/>
    </bean>

    <bean id="acmAuthenticationManager" class="com.armedia.acm.auth.AcmAuthenticationManager">
        <property name="springContextHolder" ref="acmContextHolder"/>
        <property name="authoritiesMapper" ref="acmAuthoritiesMapper"/>
        <property name="authenticationEventPublisher" ref="ssAuthenticationEventPublisher"/>
        <property name="userDao" ref="userJpaDao"/>
        <property name="groupDao" ref="groupDao"/>
        <property name="groupService" ref="groupService"/>
    </bean>

    <bean id="acmAuthenticationDetailsFactory" class="com.armedia.acm.auth.AcmAuthenticationDetailsFactory"/>

    <bean id="acmLoginSuccessListener" class="com.armedia.acm.auth.AcmLoginSuccessEventListener"/>

    <bean id="acmBasicAndTokenAuthenticationFilter" class="com.armedia.acm.auth.AcmBasicAndTokenAuthenticationFilter">
        <constructor-arg ref="acmAuthenticationManager"/>
        <property name="loginSuccessOperations" ref="acmLoginSuccessOperations"/>
        <property name="authenticationDetailsSource" ref="acmAuthenticationDetailsFactory"/>
        <property name="loginSuccessEventListener" ref="acmLoginSuccessListener"/>
        <property name="authenticationTokenService" ref="authenticationTokenService"/>
        <property name="authenticationTokenDao" ref="authenticationTokenDao"/>
        <property name="acmGrantedAuthoritiesMapper" ref="acmAuthoritiesMapper"/>
        <property name="groupService" ref="groupService"/>
    </bean>

    <bean id="acmAuditPropertyInterceptor" class="com.armedia.acm.auth.AcmAuditPropertyInterceptor">
        <property name="entityAdapter" ref="auditPropertyEntityAdapter"/>
    </bean>

    <bean id="acmLoginSuccessOperations" class="com.armedia.acm.auth.AcmLoginSuccessOperations">
        <property name="acmPluginManager" ref="acmPluginManager"/>
        <property name="acmApplication" ref="acmApplication"/>
        <property name="userDao" ref="userJpaDao"/>
        <property name="auditPropertyEntityAdapter" ref="auditPropertyEntityAdapter"/>
    </bean>

    <bean id="acmLoginFailureListener" class="com.armedia.acm.auth.AcmLoginFailureEventListener"/>

    <bean id="ssAuthenticationEventPublisher"
          class="org.springframework.security.authentication.DefaultAuthenticationEventPublisher"/>

    <!-- REST services security beans -->
    <bean id="acmRestAuthenticationSuccessHandler" class="com.armedia.acm.auth.AcmRestAuthenticationSuccessHandler"/>

    <bean id="acmRestAuthenticationFailureHandler"
          class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"/>

    <bean id="acmRestAuthenticationEntryPoint" class="com.armedia.acm.auth.AcmRestAuthenticationEntryPoint"/>

    <bean id="acmStaticResourcesAuthenticationEntryPoint" class="com.armedia.acm.auth.AcmRestAuthenticationEntryPoint"/>


    <bean id="acmLoginSuccessHandler" class="com.armedia.acm.auth.AcmLoginSuccessHandler">
        <property name="loginSuccessOperations" ref="acmLoginSuccessOperations"/>
        <property name="defaultTargetUrl" value="/home.html#!/welcome"/>
        <property name="alwaysUseDefaultTargetUrl" value="false"/>
        <property name="sessionRegistry" ref="sessionRegistry"/>
        <property name="sessionAuthenticationStrategy" ref="sas"/>
    </bean>

    <bean id="acmRedirectStrategy" class="com.armedia.acm.auth.AcmRedirectStrategy"/>

    <bean id="concurrencyFilter"
          class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <constructor-arg name="sessionRegistry" ref="sessionRegistry"/>
        <constructor-arg name="expiredUrl" value="/login?login_error=2"/>
        <property name="redirectStrategy" ref="acmRedirectStrategy"/>
    </bean>

    <bean id="sas" class=
            "org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
        <constructor-arg name="sessionRegistry" ref="sessionRegistry"/>
        <property name="maximumSessions" value="1"/>
    </bean>

    <bean id="sessionRegistry"
          class="org.springframework.security.core.session.SessionRegistryImpl"/>


    <!-- when Kerberos has been used, then the login success handler should not do any redirects, since Kerberos
         has already caused the redirect we would need. This Kerberos login handler bean only sets up the
         ArkCase session, it performs no redirects. -->
    <bean id="acmKerberosLoginSuccessHandler" class="com.armedia.acm.auth.AcmKerberosLoginSuccessHandler">
        <property name="loginSuccessOperations" ref="acmLoginSuccessOperations"/>
    </bean>


    <beans profile="ldap,kerberos">
        <bean id="acmLogoutSuccessHandler" class="com.armedia.acm.auth.AcmLogoutSuccessHandler">
            <property name="authenticationDetailsFactory" ref="acmAuthenticationDetailsFactory"/>
            <property name="defaultTargetUrl" value="/login?logout"/>
            <property name="alwaysUseDefaultTargetUrl" value="false"/>
        </bean>
    </beans>

    <beans profile="ssoSaml">
        <bean id="ssoProperties"
              class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <!-- note: must leave "file:" at the start of the file name for spring
            to be able to read the file; otherwise it will try to read from the
            classpath -->
            <property name="location" value="file:${user.home}/.arkcase/acm/sso/spring-config-armedia-sso.properties"/>
            <property name="ignoreResourceNotFound" value="true"/>
            <property name="localOverride" value="false"/>
            <property name="properties">
                <props>
                    <prop key="sso.saml.authenticationCheckIntervalInSeconds">3600</prop>
                </props>
            </property>
        </bean>

        <bean id="acmSamlAuthenticationCheckFilter" class="com.armedia.acm.auth.AcmSamlAuthenticationCheckFilter">
            <property name="authenticationCheckIntervalInSeconds"
                      value="${sso.saml.authenticationCheckIntervalInSeconds}"/>
        </bean>

        <bean id="acmSamlRestAuthenticationCheckFilter"
              class="com.armedia.acm.auth.AcmSamlRestAuthenticationCheckFilter">
            <property name="authenticationCheckIntervalInSeconds"
                      value="${sso.saml.authenticationCheckIntervalInSeconds}"/>
        </bean>

        <bean id="acmLogoutSuccessHandler" class="com.armedia.acm.auth.AcmLogoutSuccessHandler">
            <property name="authenticationDetailsFactory" ref="acmAuthenticationDetailsFactory"/>
            <property name="defaultTargetUrl" value="/sso/loggedout"/>
            <property name="alwaysUseDefaultTargetUrl" value="false"/>
        </bean>
    </beans>

</beans>
