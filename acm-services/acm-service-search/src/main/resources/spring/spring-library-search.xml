<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd

            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
            http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.2.xsd">

    <!-- keeping this bean for now even though we are not using any properties yet.  -->
    <bean id="searchPluginProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/solr.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props>
                <prop key="solr.host">localhost</prop>
                <prop key="solr.port">8983</prop>
                <prop key="solr.contextRoot">solr</prop>
                <prop key="solr.quicksearch.core">acmQuickSearch</prop>
                <prop key="solr.advancedsearch.core">acmAdvancedSearch</prop>
                <prop key="solr.updateHandler">update</prop>
                <prop key="solr.searchHandler">select</prop>
                <prop key="solr.contentFileHandler">update/extract</prop>
                <prop key="solr.enableBatchUpdateBasedOnLastModified">true</prop>
                <prop key="solr.batchUpdateFrequencyInMilliseconds">3600000</prop>
                <prop key="solr.batchUpdateBatchSize">50</prop>
                <prop key="solr.enableContentFileIndexing">true</prop>
            </props>
        </property>
    </bean>

    <!-- keeping this bean for now even though we are not using any properties yet.  -->
    <bean id="searchProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/searchPlugin.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props></props>
        </property>
    </bean>

    <bean id="eventTypeProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/eventType.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props></props>
        </property>
    </bean>

    <bean id="dacProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="file:${user.home}/.arkcase/acm/dataAccessControl.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
    </bean>

    <bean id="csvReportGenerator" class="com.armedia.acm.services.search.service.CSVReportGenerator">
        <property name="propertyMap" ref="pluginSearch"/>
    </bean>
    
    <jms:annotation-driven/>
    
    <import resource="file:${user.home}/.arkcase/acm/activeMqSpringConfig.xml"/>    

    <bean id="destinationResolver" class="org.springframework.jms.support.destination.DynamicDestinationResolver"/>    

    <bean id="jmsListenerContainerFactory" class="org.springframework.jms.config.DefaultJmsListenerContainerFactory">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <property name="destinationResolver" ref="destinationResolver"/>
        <property name="concurrency" value="3-10"/>
    </bean>
    
    <bean id="solrRestClient" class="com.armedia.acm.services.search.service.solr.SolrRestClient">
        <property name="solrHost" value="${solr.host}"/>
        <property name="solrPort" value="${solr.port}"/>
        <property name="solrContextRoot" value="${solr.contextRoot}"/>
    </bean>
    
    <bean id="solrPostClient" class="com.armedia.acm.services.search.service.solr.DefaultSolrPostClient">
        <property name="solrUpdateHandler" value="${solr.updateHandler}"/>
        <property name="solrRestClient" ref="solrRestClient"/>
    </bean>
    
    <bean id="solrPostQueueListener" class="com.armedia.acm.services.search.service.solr.SolrPostQueueListener">
        <property name="solrPostClient" ref="solrPostClient"/>
    </bean>

    <bean id="sendDocumentsToSolr" class="com.armedia.acm.services.search.service.SendDocumentsToSolr">
        <property name="objectConverter" ref="objectConverter"/>
        <property name="jmsConnectionFactory" ref="jmsConnectionFactory"/>
    </bean>
    
    
    <bean id="searchResults" class="com.armedia.acm.services.search.service.SearchResults"/>
    <bean id="jpaObjectsToSearchService" class="com.armedia.acm.services.search.service.JpaObjectsToSearchService">
        <property name="springContextHolder" ref="acmContextHolder"/>
        <property name="sendToSolr" ref="sendDocumentsToSolr"/>
    </bean>

    <task:scheduler id="searchTaskScheduler" pool-size="1"/>
    <task:scheduled-tasks scheduler="searchTaskScheduler">
        <task:scheduled ref="acmJpaBatchUpdateService" method="jpaBatchUpdate" fixed-delay="${solr.batchUpdateFrequencyInMilliseconds}"/>
    </task:scheduled-tasks>

    <bean id="acmJpaBatchUpdateService" class="com.armedia.acm.services.search.service.AcmJpaBatchUpdateService">
        <property name="batchUpdateBasedOnLastModifiedEnabled" value="${solr.enableBatchUpdateBasedOnLastModified}"/>
        <property name="lastBatchUpdatePropertyFileLocation" value="${user.home}/.arkcase/acm/solrLastBatchUpdate.properties"/>
        <property name="propertyFileManager" ref="propertyFileManager"/>
        <property name="springContextHolder" ref="acmContextHolder"/>
        <property name="batchSize" value="${solr.batchUpdateBatchSize}"/>
        <property name="objectsToSearchService" ref="jpaObjectsToSearchService"/>
        <property name="auditPropertyEntityAdapter" ref="auditPropertyEntityAdapter"/>
    </bean>

    <bean id="executeSolrQuery" class="com.armedia.acm.services.search.service.ExecuteSolrQuery">
        <property name="muleContextManager" ref="muleContextManager"/>
        <property name="objectConverter" ref="objectConverter"/>
        <property name="enableDocumentACL" value="${dac.enableDocumentACL}"/>
    </bean>

    <!-- event publishers -->
    <bean id="acmSearchEventPublisher" class="com.armedia.acm.services.search.service.SearchEventPublisher"/>

    <bean id="pluginSearch" class="com.armedia.acm.pluginmanager.model.AcmPlugin">
        <property name="pluginName" value="Search Plugin"/>
        <property name="pluginProperties" ref="searchProperties"/>
    </bean>
    <bean id="searchPlugin" class="com.armedia.acm.pluginmanager.model.AcmPlugin">
        <property name="pluginName" value="Search Plugin"/>
        <property name="pluginProperties" ref="searchPluginProperties"/>
    </bean>
    <bean id="pluginEventType" class="com.armedia.acm.pluginmanager.model.AcmPlugin">
        <property name="pluginName" value="Event Type Names"/>
        <property name="pluginProperties" ref="eventTypeProperties"/>
    </bean>

    <bean id="facetedSearchService" class="com.armedia.acm.services.search.service.FacetedSearchService">
        <property name="pluginEventType" ref="pluginEventType"/>
        <property name="pluginSearch" ref="pluginSearch"/>
    </bean>

    <bean id="solrJoinDocumentsService" class="com.armedia.acm.services.search.service.SolrJoinDocumentsServiceImpl">
        <property name="executeSolrQuery" ref="executeSolrQuery"/>
    </bean>

</beans>