<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <context:property-placeholder
        properties-ref="searchPluginProperties"
        ignore-unresolvable="true"
        local-override="false"
        order="987691"/>


    <!-- keeping this bean for now even though we are not using any properties yet.  -->
    <bean id="searchPluginProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean" >
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.acm/solr.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props>
                <prop key="solr.host">localhost</prop>
                <prop key="solr.port">8983</prop>
                <prop key="solr.contextRoot">solr</prop>
                <prop key="solr.quicksearch.core">acmQuickSearch</prop>
                <prop key="solr.advancedsearch.core">acmAdvancedSearch</prop>
                <prop key="solr.updateHandler">update</prop>
                <prop key="solr.searchHandler">select</prop>
                <prop key="solr.enableBatchUpdateBasedOnLastModified">true</prop>
                <prop key="solr.batchUpdateFrequencyInMilliseconds">3600000</prop>
                <prop key="solr.batchUpdateBatchSize">50</prop>
            </props>
        </property>
    </bean>

    <bean id="sendDocumentsToSolr" class="com.armedia.acm.services.search.service.SendDocumentsToSolr">
        <property name="contextHolder" ref="acmContextHolder"/>
    </bean>
    <bean id="jpaObjectsToSearchService" class="com.armedia.acm.services.search.service.JpaObjectsToSearchService">
        <property name="springContextHolder" ref="acmContextHolder"/>
        <property name="sendToSolr" ref="sendDocumentsToSolr"/>
    </bean>

    <task:scheduler id="searchTaskScheduler" pool-size="1"/>
    <task:scheduled-tasks scheduler="searchTaskScheduler">
        <task:scheduled
                ref="acmJpaBatchUpdateService"
                method="jpaBatchUpdate"
                fixed-delay="${solr.batchUpdateFrequencyInMilliseconds}"/>
    </task:scheduled-tasks>

    <bean id="acmJpaBatchUpdateService" class="com.armedia.acm.services.search.service.AcmJpaBatchUpdateService">
        <property name="batchUpdateBasedOnLastModifiedEnabled" value="${solr.enableBatchUpdateBasedOnLastModified}"/>
        <property name="lastBatchUpdatePropertyFileLocation" value="${user.home}/.acm/solrLastBatchUpdate.properties"/>
        <property name="propertyFileManager">
            <bean class="com.armedia.acm.files.propertymanager.PropertyFileManager"/>
        </property>
        <property name="springContextHolder" ref="acmContextHolder"/>
        <property name="batchSize" value="${solr.batchUpdateBatchSize}"/>
        <property name="objectsToSearchService" ref="jpaObjectsToSearchService"/>
    </bean>

    <!-- event publishers -->
    <bean id="acmSearchEventPublisher" class="com.armedia.acm.services.search.service.SearchEventPublisher"/>
    
    <bean id="searchPlugin" class="com.armedia.acm.pluginmanager.model.AcmPlugin">
         <property name="pluginName" value="Search Plugin"/>
        <property name="pluginProperties" ref="searchPluginProperties"/>
        <property name="privileges">
            <list>
                <ref bean="searchPrivilege"/>
            </list>
        </property>
        <property name="urlPrivileges">
            <list>
                <bean id="searchUrl" class="com.armedia.acm.pluginmanager.model.AcmPluginUrlPrivilege">
                    <property name="httpMethod" value="GET"/>
                    <property name="url" value="/plugin/search"/>
                    <property name="requiredPrivilege" ref="searchPrivilege"/>
                </bean>
                <bean id="quickSearchUrl" class="com.armedia.acm.pluginmanager.model.AcmPluginUrlPrivilege">
                    <property name="httpMethod" value="GET"/>
                    <property name="url" value="/api/{version}/plugin/search/quickSearch"/>
                    <property name="requiredPrivilege" ref="searchPrivilege"/>
                </bean>
                 <bean id="ChildrenUrl" class="com.armedia.acm.pluginmanager.model.AcmPluginUrlPrivilege">
                    <property name="httpMethod" value="GET"/>
                    <property name="url" value="/api/{version}/plugin/search/children"/>
                    <property name="requiredPrivilege" ref="searchPrivilege"/>
                </bean>
                <bean id="objectTypeUrl" class="com.armedia.acm.pluginmanager.model.AcmPluginUrlPrivilege">
                    <property name="httpMethod" value="GET"/>
                    <property name="url" value="/api/{version}/plugin/search/{objectType}"/>
                    <property name="requiredPrivilege" ref="searchPrivilege"/>
                </bean>
                <bean id="ComplaintsUrl" class="com.armedia.acm.pluginmanager.model.AcmPluginUrlPrivilege">
                    <property name="httpMethod" value="GET"/>
                    <property name="url" value="/api/{version}/plugin/search/complaintsSearch"/>
                    <property name="requiredPrivilege" ref="searchPrivilege"/>
                </bean>
                <bean id="CaseFilesUrl" class="com.armedia.acm.pluginmanager.model.AcmPluginUrlPrivilege">
                    <property name="httpMethod" value="GET"/>
                    <property name="url" value="/api/{version}/plugin/search/caseFilesSearch"/>
                    <property name="requiredPrivilege" ref="searchPrivilege"/>
                </bean>
                <bean id="CaseFilesByDueDateUrl" class="com.armedia.acm.pluginmanager.model.AcmPluginUrlPrivilege">
                    <property name="httpMethod" value="GET"/>
                    <property name="url" value="/api/{version}/plugin/search/caseFilesSearch/byTimeInterval"/>
                    <property name="requiredPrivilege" ref="searchPrivilege"/>
                </bean>
                <bean id="ComplaintsUrlByCreatedDate" class="com.armedia.acm.pluginmanager.model.AcmPluginUrlPrivilege">
                    <property name="httpMethod" value="GET"/>
                    <property name="url" value="/api/{version}/plugin/search/complaintsSearch/byTimeInterval"/>
                    <property name="requiredPrivilege" ref="searchPrivilege"/>
                </bean>
            </list>
        </property>

    </bean>

    <bean id="searchPrivilege" class="com.armedia.acm.pluginmanager.model.AcmPluginPrivilege">
        <property name="privilegeName" value="acm-search"/>
        <property name="applicationRolesWithPrivilege">
            <list>
                <value>ROLE_INVESTIGATOR</value>
                <value>ROLE_INVESTIGATOR_SUPERVISOR</value>
                <value>ROLE_ANALYST</value>
                <value>ROLE_CALLCENTER</value>
                <value>ROLE_ADMINISTRATOR</value>
            </list>
        </property>
    </bean>

	<!-- services -->
    <bean id="taskToQuickSearchJsonConverter"
          class="com.armedia.acm.services.search.service.TaskToQuickSearchJsonConverter">
        <property name="dataAccessEntryService" ref="dataAccessEntryService"/>
    </bean>
   
    <!-- event handlers -->
    <bean id="sendAdHocTaskCreateToSolrAction" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.app.task.create"/>
        <property name="action" ref="sendQuickSearchTaskRecordsToSolrAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map/>
        </property>
        <property name="respondPredicate" ref="eventSucceededPredicate"/>
    </bean>

    <bean id="sendAdHocTaskCompleteToSolrAction" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.app.task.complete"/>
        <property name="action" ref="sendQuickSearchTaskRecordsToSolrAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map/>
        </property>
        <property name="respondPredicate" ref="eventSucceededPredicate"/>
    </bean>

    <bean id="sendAdHocTaskDeleteToSolrAction" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.app.task.delete"/>
        <property name="action" ref="sendQuickSearchTaskRecordsToSolrAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map/>
        </property>
        <property name="respondPredicate" ref="eventSucceededPredicate"/>
    </bean>

    <bean id="sendAdHocTaskSaveToSolrAction" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.app.task.save"/>
        <property name="action" ref="sendQuickSearchTaskRecordsToSolrAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map/>
        </property>
        <property name="respondPredicate" ref="eventSucceededPredicate"/>
    </bean>

    <bean id="sendActivitiTaskCompleteToSolrAction" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.activiti.task.complete"/>
        <property name="action" ref="sendQuickSearchTaskRecordsToSolrAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map/>
        </property>
        <property name="respondPredicate" ref="eventSucceededPredicate"/>
    </bean>

    <bean id="sendActivitiTaskCreateToSolrAction" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.activiti.task.create"/>
        <property name="action" ref="sendQuickSearchTaskRecordsToSolrAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map/>
        </property>
        <property name="respondPredicate" ref="eventSucceededPredicate"/>
    </bean>

    <bean id="sendActivitiTaskAssignmentToSolrAction" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.activiti.task.assignment"/>
        <property name="action" ref="sendQuickSearchTaskRecordsToSolrAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map/>
        </property>
        <property name="respondPredicate" ref="eventSucceededPredicate"/>
    </bean>

    <bean id="sendActivitiTaskDeleteToSolrAction" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.activiti.task.delete"/>
        <property name="action" ref="sendQuickSearchTaskRecordsToSolrAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map/>
        </property>
        <property name="respondPredicate" ref="eventSucceededPredicate"/>
    </bean>

    <bean id="sendActivitiTaskSaveToSolrAction" class="com.armedia.acm.event.EventResponse">
        <property name="eventName" value="com.armedia.acm.activiti.task.save"/>
        <property name="action" ref="sendQuickSearchTaskRecordsToSolrAction"/>
        <property name="enabled" value="true"/>
        <property name="parameters">
            <map/>
        </property>
        <property name="respondPredicate" ref="eventSucceededPredicate"/>
    </bean>

</beans>