<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<!-- Rules definitions -->
    <bean id="assignRule" class="com.armedia.acm.services.notification.model.BasicNotificationRule">
		<property name="globalRule" value="true"/>	
		<property name="queryType" value="CREATE"/>
		<property name="executor" ref="sendExecutor"/>
		<property name="jpaQuery">
			<value>
				<![CDATA[
					SELECT 
					  a.newAssignee AS user,
					  CONCAT(a.objectType, ' ', a.objectName, ' assigned to ', u.fullName, ' on ', a.created) AS title,
					  CONCAT(a.objectType, ' ', a.objectName, ' assigned to ', u.fullName, ' on ', a.created) AS note,
					  'user' AS notificationType,
					  a.objectId AS objectId,
					  a.objectType AS objectType,
					  a.objectName AS objectName,
					  a.objectTitle AS objectTitle,
					  u.mail as mail
					FROM 
						AcmAssignment a, AcmUser u 
					WHERE 
						a.newAssignee IS NOT NULL 
					AND
						a.newAssignee=u.userId 
					AND 
						a.created >= :lastRunDate
					ORDER BY 
						a.created
				]]>
			</value>
		</property>
    </bean>
	
	<bean id="unassignRule" class="com.armedia.acm.services.notification.model.BasicNotificationRule">
		<property name="globalRule" value="true"/>	
		<property name="queryType" value="CREATE"/>
		<property name="executor" ref="sendExecutor"/>
		<property name="jpaQuery">
			<value>
				<![CDATA[
					SELECT 	
					  a.oldAssignee AS user,
					  CONCAT(a.objectType, ' ', a.objectName, ' unassigned from ', u.fullName, ' on ', a.created) AS title, 
					  CONCAT(a.objectType, ' ', a.objectName, ' unassigned from ', u.fullName, ' on ', a.created) AS note,
					  'user' AS notificationType,
					  a.objectId AS objectId,
					  a.objectType AS objectType,
					  a.objectName AS objectName,
					  a.objectTitle AS objectTitle,
					  u.mail as mail
					FROM 
						AcmAssignment a, AcmUser u 
					WHERE 
						a.oldAssignee IS NOT NULL
					AND
						a.oldAssignee=u.userId 
					AND 
						a.created >= :lastRunDate
					ORDER BY 
						a.created
				]]>
			</value>
		</property>
    </bean>
    
    <bean id="purgeRule" class="com.armedia.acm.services.notification.model.BasicNotificationRule">
		<property name="globalRule" value="true"/>	
		<property name="queryType" value="SELECT"/>
		<property name="executor" ref="purgeExecutor"/>
		<property name="jpaQuery">
			<value>
				<![CDATA[
					SELECT 
					    notification
					FROM 
						Notification notification 
					WHERE 
						notification.status != 'DELETE' 
					AND
						notification.created <= :threshold
				]]>
			</value>
		</property>
    </bean>
	

	<!-- Task Scheduler -->
	<task:scheduler id="notificationTaskScheduler" pool-size="1"/>
    <task:scheduled-tasks scheduler="notificationTaskScheduler">
        <task:scheduled
                ref="notificationService"
                method="run"
                fixed-delay="300000"/>
    </task:scheduled-tasks>
    
	<!-- Service Definition -->
    <bean id="notificationService" class="com.armedia.acm.services.notification.service.NotificationServiceImpl">
    	<property name="batchRun" ref="notificationUserBatchRun" />
    	<property name="batchSize" ref="notificationUserBatchSize" />
    	<property name="purgeDays" ref="notificationPurgeDays" />
    	<property name="propertyFileManager">
            <bean class="com.armedia.acm.files.propertymanager.PropertyFileManager"/>
        </property>
        <property name="notificationPropertyFileLocation" ref="notificationPropertyFileLocation" />
        <property name="notificationDao" ref="notificationDao" />
        <property name="muleClient" ref="muleClient" />
		<property name="notificationEventPublisher" ref="notificationEventPublisher" />
		<property name="springContextHolder" ref="acmContextHolder"/> 
    </bean>

</beans>