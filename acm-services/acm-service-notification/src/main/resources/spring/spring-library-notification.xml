<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">


    <bean id="notificationProperties"
          class="com.armedia.acm.reloadproperties.beans.AcmReloadablePropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/notification.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props>
                <prop key="notification.user.batch.run">true</prop>
                <prop key="notification.user.batch.frequency">100000</prop>
                <prop key="notification.user.batch.size">50</prop>
                <prop key="notification.purge.days">30</prop>
                <prop key="notification.send.from.system.user">false</prop>
            </props>
        </property>
    </bean>


    <!-- Notification Service is defined under $HOME/.acm/spring folder -->

    <!-- We need these for adding in the Notification Service defined under $HOME/.acm/spring  -->
    <bean id="notificationUserBatchRun" class="java.lang.Boolean">
        <constructor-arg value="${notification.user.batch.run}"/>
    </bean>
    <bean id="notificationUserBatchSize" class="java.lang.Integer">
        <constructor-arg value="${notification.user.batch.size}"/>
    </bean>
    <bean id="notificationUserBatchFrequency" class="java.lang.Long">
        <constructor-arg value="${notification.user.batch.frequency}"/>
    </bean>
    <bean id="notificationPropertyFileLocation" class="java.lang.String">
        <constructor-arg value="${user.home}/.arkcase/acm/notification.properties"/>
    </bean>
    <bean id="notificationPurgeDays" class="java.lang.Long">
        <constructor-arg value="${notification.purge.days}"/>
    </bean>

    <bean id="notificationDao" class="com.armedia.acm.services.notification.dao.NotificationDao"/>
    <bean id="notificationEventPublisher"
          class="com.armedia.acm.services.notification.service.NotificationEventPublisher"/>

    <bean id="notificationToSolrTransformer"
          class="com.armedia.acm.services.notification.service.NotificationToSolrTransformer">
        <property name="notificationDao" ref="notificationDao"/>
        <property name="userDao" ref="userJpaDao"/>
    </bean>

    <!-- Executors -->
    <bean id="sendExecutor" class="com.armedia.acm.services.notification.service.SendExecutor">
        <property name="springContextHolder" ref="acmContextHolder"/>
    </bean>
    <bean id="purgeExecutor" class="com.armedia.acm.services.notification.service.PurgeExecutor">
        <property name="auditPropertyEntityAdapter" ref="auditPropertyEntityAdapter"/>
    </bean>
    <bean id="noopExecutor" class="com.armedia.acm.services.notification.service.NoopExecutor"/>

    <bean id="acmNotificationPlugin" class="com.armedia.acm.pluginmanager.model.AcmPlugin">
        <property name="pluginName" value="Save Notification Service Plugin"/>
    </bean>

    <!-- Senders Definition -->

    <!--<bean id="authenticationTokenDao" class="com.armedia.acm.services.authenticationtoken.dao.AuthenticationTokenDao"/>-->


    <bean id="emailNotificationSender" class="com.armedia.acm.services.notification.service.EmailNotificationSender">
        <property name="auditPropertyEntityAdapter" ref="auditPropertyEntityAdapter"/>
        <property name="propertyFileManager">
            <bean class="com.armedia.acm.files.propertymanager.PropertyFileManager"/>
        </property>
        <property name="notificationPropertyFileLocation" ref="notificationPropertyFileLocation"/>
        <property name="muleContextManager" ref="muleContextManager"/>
        <property name="authenticationTokenService" ref="authenticationTokenService"/>
        <property name="authenticationTokenDao" ref="authenticationTokenDao"/>
    </bean>

</beans>