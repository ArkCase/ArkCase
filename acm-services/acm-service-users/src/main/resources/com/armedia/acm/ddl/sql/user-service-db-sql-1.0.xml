<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="01-populate_acm_group_membership_from_current_data" author="ncuculova" dbms="mysql">
        <preConditions>
            <and>
                <columnExists tableName="acm_group" columnName="cm_group_parent_name"/>
            </and>
        </preConditions>
        <!-- ANSI standard SQL, should work on any database -->
        <sql>
            <comment>Get group with parent group and move to group membership table</comment>
            INSERT INTO acm_group_membership
            SELECT ag.cm_group_parent_name AS cm_group_name,
            ag.cm_group_name AS cm_member_group_name
            FROM acm_group ag
            WHERE cm_group_type="LDAP_GROUP"
            AND cm_group_parent_name IS NOT NULL;
        </sql>
    </changeSet>

    <changeSet id="01-populate_acm_group_membership_from_current_data" author="ncuculova" dbms="postgresql,oracle,mssql">
        <preConditions>
            <and>
                <columnExists tableName="acm_group" columnName="cm_group_parent_name"/>
            </and>
        </preConditions>
        <!-- ANSI standard SQL, should work on any database -->
        <sql>
            <comment>Get group with parent group and move to group membership table</comment>
            INSERT INTO acm_group_membership
            SELECT cm_group_parent_name AS cm_group_name,
            cm_group_name AS cm_member_group_name
            FROM acm_group
            WHERE cm_group_type='LDAP_GROUP'
            AND cm_group_parent_name IS NOT NULL;
        </sql>
    </changeSet>

    <changeSet id="02-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="mysql">
        <update tableName="acm_group">
            <column name="cm_group_display_name" value="SUBSTRING_INDEX(cm_group_name, '-UUID-', 1)"/>
        </update>
    </changeSet>

    <changeSet id="02-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="postgresql">
        <update tableName="acm_group">
            <column name="cm_group_display_name" value="split_part(cm_group_name, '-UUID-', 1)"/>
        </update>
    </changeSet>

    <changeSet id="03-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="mssql">
        <update tableName="acm_group">
            <column name="cm_group_display_name" value="cm_group_name"/>
        </update>
    </changeSet>
    <changeSet id="04-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="mssql">
        <update tableName="acm_group">
            <column name="cm_group_display_name" value="SUBSTRING(cm_group_display_name,0,CHARINDEX('-UUID-',cm_group_display_name,0))"/>
            <where>cm_group_display_name LIKE '%-UUID-%'</where>
        </update>
    </changeSet>

    <changeSet id="05-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="oracle">
        <update tableName="acm_group">
            <column name="cm_group_display_name" value="cm_group_name"/>
        </update>
    </changeSet>
    <changeSet id="06-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="oracle">
        <update tableName="acm_group">
            <column name="cm_group_display_name" value="substr(cm_group_display_name, 1, instr(cm_group_display_name, '-UUID-') - 1)"/>
            <where>cm_group_display_name LIKE '%-UUID-%'</where>
        </update>
    </changeSet>


    <changeSet id="07-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="mysql">
        <update tableName="acm_group">
            <column name="cm_group_display_name" valueComputed="SUBSTRING_INDEX(cm_group_name, '-UUID-', 1)"/>
        </update>
    </changeSet>

    <changeSet id="07-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="postgresql">
        <update tableName="acm_group">
            <column name="cm_group_display_name" valueComputed="split_part(cm_group_name, '-UUID-', 1)"/>
        </update>
    </changeSet>

    <changeSet id="08-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="mssql">
        <sql>UPDATE acm_group SET cm_group_display_name = cm_group_name</sql>
    </changeSet>
    <changeSet id="09-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="mssql">
        <update tableName="acm_group">
            <column name="cm_group_display_name"
                    valueComputed="SUBSTRING(cm_group_display_name,0,CHARINDEX('-UUID-',cm_group_display_name,0))"/>
            <where>cm_group_display_name LIKE '%-UUID-%'</where>
        </update>
    </changeSet>

    <changeSet id="10-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="oracle">
        <sql>UPDATE acm_group SET cm_group_display_name = cm_group_name</sql>
    </changeSet>
    <changeSet id="11-acm-group-populate-cm-group-display-name-from-cm-group-name" author="marko.stojanoski" dbms="oracle">
        <update tableName="acm_group">
            <column name="cm_group_display_name"
                    valueComputed="substr(cm_group_display_name, 1, instr(cm_group_display_name, '-UUID-') - 1)"/>
            <where>cm_group_display_name LIKE '%-UUID-%'</where>
        </update>
    </changeSet>

    <changeSet id="11-update-cm_distinguished_name-with-cm_user_id" author="ncuculova">
        <sql>
            UPDATE acm_user SET cm_distinguished_name = cm_user_id;
        </sql>
    </changeSet>

    <changeSet id="12-update-group-names-in-acm_user_membership_procedure" author="ncuculova" dbms="mysql">
        <createProcedure>
            CREATE PROCEDURE UpdateUserMembershipForAdHocGroups()
            BEGIN
            DECLARE tmp_group_name VARCHAR(1024) DEFAULT NULL;
            DECLARE tmp_user_id VARCHAR(1024) DEFAULT NULL;
            DECLARE done BOOLEAN DEFAULT 0;

            DECLARE acm_cursor CURSOR FOR
            SELECT
            aum.cm_group_name,
            aum.cm_user_id
            FROM acm_user_membership aum
            JOIN acm_group ag ON aum.cm_group_name = ag.cm_group_name
            WHERE ag.cm_group_status = 'ACTIVE' AND
            ag.cm_group_type = 'ADHOC_GROUP'
            AND ag.cm_group_name LIKE '%-UUID-%'
            AND CHAR_LENGTH(ag.cm_group_name) > 42
            GROUP BY SUBSTRING_INDEX(aum.cm_group_name, '-UUID-', 1), aum.cm_user_id;
            DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

            OPEN acm_cursor;

            REPEAT
            FETCH acm_cursor
            INTO tmp_group_name, tmp_user_id;
            UPDATE acm_user_membership
            SET cm_group_name = SUBSTRING_INDEX(cm_group_name, '-UUID-', 1)
            WHERE cm_group_name = tmp_group_name
            AND cm_user_id = tmp_user_id;
            UNTIL done END REPEAT;

            CLOSE acm_cursor;
            END;
        </createProcedure>
    </changeSet>

    <changeSet id="12-update-group-names-in-acm_user_membership_procedure" author="ncuculova" dbms="postgresql">
        <createProcedure>
            CREATE FUNCTION UpdateUserMembershipForAdHocGroups()
            RETURNS VOID AS
            $$
            DECLARE aum_cursor CURSOR FOR
            SELECT DISTINCT ON (split_part(aum.cm_group_name, '-UUID-', 1), aum.cm_user_id)
            aum.cm_group_name,
            aum.cm_user_id
            FROM acm_user_membership aum
            JOIN acm_group ag ON aum.cm_group_name = ag.cm_group_name
            WHERE ag.cm_group_status = 'ACTIVE' AND
            ag.cm_group_type = 'ADHOC_GROUP'
            AND ag.cm_group_name LIKE '%-UUID-%'
            AND char_length(ag.cm_group_name) > 42;
            BEGIN

            FOR item IN aum_cursor LOOP
            UPDATE acm_user_membership
            SET cm_group_name = split_part(cm_group_name, '-UUID-', 1)
            WHERE cm_group_name = item.cm_group_name
            AND cm_user_id = item.cm_user_id;

            END LOOP;

            END;
            $$ LANGUAGE plpgsql;
        </createProcedure>
    </changeSet>

    <changeSet id="13-update-group-names-in-acm_group_membership-procedure" author="ncuculova" dbms="mysql">
        <createProcedure>
            CREATE PROCEDURE UpdateGroupMembershipForAdHocGroups()
            BEGIN
            DECLARE tmp_group_name VARCHAR(1024) DEFAULT NULL;
            DECLARE tmp_member_group_name VARCHAR(1024) DEFAULT NULL;
            DECLARE done BOOLEAN DEFAULT 0;

            DECLARE acm_cursor CURSOR FOR
            SELECT
            agm.cm_group_name,
            agm.cm_member_group_name
            FROM acm_group_membership agm
            JOIN acm_group ag ON agm.cm_group_name = ag.cm_group_name
            WHERE ag.cm_group_status = 'ACTIVE' AND
            ag.cm_group_type = 'ADHOC_GROUP'
            AND ag.cm_group_name LIKE '%-UUID-%'
            AND CHAR_LENGTH(ag.cm_group_name) > 42
            GROUP BY SUBSTRING_INDEX(agm.cm_group_name, '-UUID-', 1), SUBSTRING_INDEX(agm.cm_member_group_name, '-UUID-', 1);
            DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

            OPEN acm_cursor;

            REPEAT
            FETCH acm_cursor
            INTO tmp_group_name, tmp_member_group_name;
            UPDATE acm_group_membership
            SET cm_group_name      = SUBSTRING_INDEX(cm_group_name, '-UUID-', 1),
            cm_member_group_name = SUBSTRING_INDEX(cm_member_group_name, '-UUID-', 1)
            WHERE cm_group_name = tmp_group_name
            AND cm_member_group_name = tmp_member_group_name;
            UNTIL done END REPEAT;

            CLOSE acm_cursor;
            END;
        </createProcedure>
    </changeSet>

    <changeSet id="13-update-group-names-in-acm_group_membership-procedure" author="ncuculova" dbms="postgresql">
        <createProcedure>
            CREATE FUNCTION UpdateGroupMembershipForAdHocGroups()
            RETURNS VOID AS
            $$
            DECLARE aum_cursor CURSOR FOR
            SELECT DISTINCT ON (split_part(agm.cm_group_name, '-UUID-', 1), split_part(agm.cm_member_group_name, '-UUID-', 1))
            agm.cm_group_name,
            agm.cm_member_group_name
            FROM acm_group_membership agm
            JOIN acm_group ag ON agm.cm_group_name = ag.cm_group_name
            WHERE ag.cm_group_status = 'ACTIVE' AND
            ag.cm_group_type = 'ADHOC_GROUP'
            AND ag.cm_group_name LIKE '%-UUID-%'
            AND char_length(ag.cm_group_name) > 42;
            BEGIN

            FOR item IN aum_cursor LOOP
            UPDATE acm_group_membership
            SET cm_group_name = split_part(cm_group_name, '-UUID-', 1),
            cm_member_group_name = split_part(cm_member_group_name, '-UUID-', 1)
            WHERE cm_group_name = item.cm_group_name
            AND cm_member_group_name = item.cm_member_group_name;
            END LOOP;

            END;
            $$ LANGUAGE plpgsql;
        </createProcedure>
    </changeSet>

</databaseChangeLog>
