<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-2.5.xsd">

    <task:scheduler id="ldapSyncTaskScheduler" pool-size="1"/>

    <bean id="springLdapPagedDao" class="com.armedia.acm.services.users.dao.ldap.SpringLdapPagedDao"/>

    <bean id="customPagedLdapDao" class="com.armedia.acm.services.users.dao.ldap.CustomPagedLdapDao"/>

    <bean id="springLdapUserDao" class="com.armedia.acm.services.users.dao.ldap.SpringLdapUserDao">
        <property name="ldapCrudDao" ref="ldapCrudDao"/>
        <property name="ldapEntryTransformer" ref="ldapEntryTransformer"/>
        <property name="passwordLengthValidationRule" ref="passwordLengthValidationRule"/>
    </bean>

    <bean id="springLdapGroupDao" class="com.armedia.acm.services.users.dao.ldap.SpringLdapGroupDao">
        <property name="ldapCrudDao" ref="ldapCrudDao"/>
        <property name="ldapEntryTransformer" ref="ldapEntryTransformer"/>
    </bean>

    <bean id="ldapCrudDao" class="com.armedia.acm.services.users.dao.ldap.LdapCrudDao">
        <property name="ldapDao" ref="customPagedLdapDao"/>
    </bean>

    <bean id="acmUserService" class="com.armedia.acm.services.users.service.AcmUserServiceImpl">
        <property name="userDao" ref="userJpaDao"/>
        <property name="executeSolrQuery" ref="executeSolrQuery"/>
    </bean>

    <bean id="userRoleService" class="com.armedia.acm.services.users.service.AcmUserRoleService">
        <property name="userDao" ref="userJpaDao"/>
        <property name="roleToGroupConfig" ref="acmRoleToGroupConfig"/>
    </bean>

    <!-- UserDao caching functionality -->
    <bean id="quietUserLookupCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="quietUserLookupConnectionEhCache"/>
    </bean>

    <bean id="quietUserLookupConnectionEhCache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:/ehcache/quietUserLookupCacheConfig.xml"/>
        <property name="cacheManagerName" value="acm-service-users"/>
    </bean>

    <bean id="quietUserLookupCache" factory-bean="quietUserLookupCacheManager" factory-method="getCache">
        <constructor-arg value="quiet-user-cache"/>
    </bean>

    <bean id="userJpaDao" class="com.armedia.acm.services.users.dao.UserDao" init-method="init">
        <property name="quietUserLookupCache" ref="quietUserLookupCache"/>
        <property name="configList" ref="configList"/>
    </bean>
    <!-- End UserDao caching functionality -->

    <bean id="userActionDao" class="com.armedia.acm.services.users.dao.UserActionDao"/>

    <bean id="groupDao" class="com.armedia.acm.services.users.dao.group.AcmGroupDao"/>

    <bean id="groupService" class="com.armedia.acm.services.users.service.group.GroupServiceImpl">
        <property name="userDao" ref="userJpaDao"/>
        <property name="groupDao" ref="groupDao"/>
        <property name="executeSolrQuery" ref="executeSolrQuery"/>
        <property name="acmGroupEventPublisher" ref="acmGroupEventPublisher"/>
    </bean>

    <bean id="userActionExecutor" class="com.armedia.acm.services.users.service.ldap.AcmUserActionExecutor">
        <property name="userActionDao" ref="userActionDao"/>
    </bean>

    <bean id="ldapSyncProcessor" class="com.armedia.acm.services.users.service.ldap.LdapSyncProcessor">
        <property name="groupDao" ref="groupDao"/>
        <property name="userDao" ref="userJpaDao"/>
        <property name="roleToGroupConfig" ref="acmRoleToGroupConfig"/>
        <property name="ldapDatabaseSyncService" ref="ldapDatabaseSyncService"/>
    </bean>

    <bean id="ldapDatabaseSyncService" class="com.armedia.acm.services.users.service.ldap.LdapDatabaseSyncService">
        <property name="userDao" ref="userJpaDao"/>
        <property name="groupDao" ref="groupDao"/>
        <property name="acmGroupEventPublisher" ref="acmGroupEventPublisher"/>
    </bean>

    <bean id="acmLdapAuthenticateManager" class="com.armedia.acm.services.users.service.ldap.LdapAuthenticateManager">
        <property name="springContextHolder" ref="acmContextHolder"/>
    </bean>

    <bean id="applicationRoleToUserGroupProperties"
          class="com.armedia.acm.reloadproperties.beans.AcmReloadablePropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/applicationRoleToUserGroup.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <!-- following properties are the default mapping of roles to
             groups.  These properties will be overwritten by properties in the
             properties file.  The properties file must have each key from the
             below list. -->
        <property name="properties">
            <props>
                <prop key="ROLE_INVESTIGATOR"></prop>
                <prop key="ROLE_INVESTIGATOR_SUPERVISOR"></prop>
                <prop key="ROLE_ANALYST"></prop>
                <prop key="ROLE_CALLCENTER"></prop>
            </props>
        </property>
    </bean>

    <bean id="acmRoleToGroupConfig" class="com.armedia.acm.services.users.model.AcmRoleToGroupMapping">
        <property name="roleToGroupMap" ref="applicationRoleToUserGroupProperties"/>
        <property name="groupDao" ref="groupDao"/>
    </bean>

    <!-- NOTE: LDAP sync service beans (of class com.armedia.acm.services.users.service.ldap.LdapSyncService) should
         be defined in dynamically-loaded Spring config files, placed in the ACM spring configuration folder
         ($HOME/.acm/spring). -->

    <!-- NOTE: LdapAuthenticateService beans (of class com.armedia.acm.services.users.service.ldap.LdapAuthenticateService) should
         be defined in dynamically-loaded Spring config files, placed in the ACM spring configuration folder
         ($HOME/.acm/spring). -->

    <bean id="userToSolrTransformer" class="com.armedia.acm.services.users.service.ldap.UserToSolrTransformer">
        <property name="userDao" ref="userJpaDao"/>
    </bean>

    <bean id="groupToSolrTransformer" class="com.armedia.acm.services.users.service.group.GroupToSolrTransformer">
        <property name="groupDao" ref="groupDao"/>
        <property name="userDao" ref="userJpaDao"/>
    </bean>

    <bean id="ldapUserService" class="com.armedia.acm.services.users.service.ldap.LdapUserService">
        <property name="ldapDao" ref="springLdapPagedDao"/>
        <property name="userDao" ref="userJpaDao"/>
        <property name="ldapUserDao" ref="springLdapUserDao"/>
        <property name="acmContextHolder" ref="acmContextHolder"/>
        <property name="ldapGroupDao" ref="springLdapGroupDao"/>
        <property name="groupService" ref="groupService"/>
    </bean>

    <bean id="ldapGroupService" class="com.armedia.acm.services.users.service.group.LdapGroupService">
        <property name="groupService" ref="groupService"/>
        <property name="userDao" ref="userJpaDao"/>
        <property name="acmContextHolder" ref="acmContextHolder"/>
        <property name="ldapEntryTransformer" ref="ldapEntryTransformer"/>
        <property name="ldapGroupDao" ref="springLdapGroupDao"/>
        <property name="acmGroupEventPublisher" ref="acmGroupEventPublisher"/>
    </bean>

    <bean id="ldapGroupNameValidator" class="com.armedia.acm.services.users.service.group.LdapGroupNameValidator"/>

    <bean id="ldapAddUserPropertiesFile" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location" value="file:${user.home}/.arkcase/acm/spring/spring-config-ldap-add-user.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props>
                <prop key="cn">fullName</prop>
                <prop key="givenName">firstName</prop>
                <prop key="sn">lastName</prop>
                <prop key="uid">userId</prop>
                <prop key="mail">mail</prop>
                <prop key="userAccountControl">userAccountControl</prop>
                <prop key="userPassword">userPassword</prop>
                <prop key="unicodePwd">unicodePwd</prop>
                <prop key="uidNumber">uidNumber</prop>
                <prop key="gidNumber">gidNumber</prop>
                <prop key="shadowWarning">shadowWarning</prop>
                <prop key="shadowLastChange">shadowLastChange</prop>
                <prop key="shadowMax">shadowMax</prop>
                <prop key="homeDirectory">homeDirectory</prop>
                <prop key="objectClass">objectClass</prop>
                <prop key="sAMAccountName">sAMAccountName</prop>
            </props>
        </property>
    </bean>

    <bean id="ldapAddGroupPropertiesFile" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location"
                  value="file:${user.home}/.arkcase/acm/spring/spring-config-ldap-add-group.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props>
                <prop key="cn">fullName</prop>
                <prop key="member">member</prop>
                <prop key="gidNumber">gidNumber</prop>
                <prop key="objectClass">objectClass</prop>
                <prop key="sAMAccountName">fullName</prop>
            </props>
        </property>
    </bean>

    <bean id="ldapEditUserPropertiesFile" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!-- note: must leave "file:" at the start of the file name for spring
        to be able to read the file; otherwise it will try to read from the
        classpath -->
        <property name="location"
                  value="file:${user.home}/.arkcase/acm/spring/spring-config-ldap-edit-user.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="false"/>
        <property name="properties">
            <props>
                <prop key="sn">lastName</prop>
                <prop key="mail">mail</prop>
                <prop key="givenName">firstName</prop>
            </props>
        </property>
    </bean>

    <bean id="ldapEntryTransformer" class="com.armedia.acm.services.users.service.ldap.LdapEntryTransformer">
        <property name="ldapAddUserPropertiesFile" ref="ldapAddUserPropertiesFile"/>
        <property name="ldapAddGroupPropertiesFile" ref="ldapAddGroupPropertiesFile"/>
        <property name="ldapEditUserPropertiesFile" ref="ldapEditUserPropertiesFile"/>
        <property name="acmContextHolder" ref="acmContextHolder"/>
    </bean>

    <!-- password validation -->
    <bean id="passwordValidationService" class="com.armedia.acm.services.users.service.ldap.PasswordValidationService">
        <property name="passwordRules" ref="passwordValidation"/>
    </bean>

    <util:list id="passwordValidation" value-type="com.armedia.acm.services.users.model.ldap.PasswordValidationRule">
        <ref bean="passwordShouldNotContainUserId"/>
        <ref bean="passwordShouldMatchLowerCasePattern"/>
        <ref bean="passwordShouldMatchUpperCasePattern"/>
        <ref bean="passwordShouldMatchDigitPattern"/>
        <ref bean="passwordShouldMatchSpecialCharPattern"/>
        <ref bean="passwordLengthValidationRule"/>
    </util:list>

    <bean id="passwordShouldNotContainUserId"
          class="com.armedia.acm.services.users.model.ldap.PasswordShouldNotContainUserId"></bean>

    <bean id="passwordShouldMatchLowerCasePattern"
          class="com.armedia.acm.services.users.model.ldap.PasswordShouldMatchPattern">
        <constructor-arg type="java.lang.String" name="pattern" value="^.*?[a-z].*$"/>
        <constructor-arg type="java.lang.String" name="message"
                         value="Password must contain at least one lowercase character"/>
    </bean>

    <bean id="passwordShouldMatchUpperCasePattern"
          class="com.armedia.acm.services.users.model.ldap.PasswordShouldMatchPattern">
        <constructor-arg type="java.lang.String" name="pattern" value="^.*?[A-Z].*$"/>
        <constructor-arg type="java.lang.String" name="message"
                         value="Password must contain at least one uppercase character"/>
    </bean>

    <bean id="passwordShouldMatchDigitPattern"
          class="com.armedia.acm.services.users.model.ldap.PasswordShouldMatchPattern">
        <constructor-arg type="java.lang.String" name="pattern" value="^.*?[0-9].*$"/>
        <constructor-arg type="java.lang.String" name="message" value="Password must contain at least one digit (0-9)"/>
    </bean>

    <bean id="passwordShouldMatchSpecialCharPattern"
          class="com.armedia.acm.services.users.model.ldap.PasswordShouldMatchPattern">
        <constructor-arg type="java.lang.String" name="pattern">
            <value><![CDATA[^.*?[[~!@#$%^&*_+=`|\(){}:;"'<>,.?/-]].*$]]></value>
        </constructor-arg>
        <constructor-arg type="java.lang.String" name="message"
                         value="Password must contain at least one special character"/>
    </bean>

    <bean id="passwordLengthValidationRule"
          class="com.armedia.acm.services.users.model.ldap.PasswordLengthValidationRule">
        <constructor-arg type="int" name="minLength" value="7"/>
        <constructor-arg type="java.lang.String" name="message" value="Password must be of minimum length of 7"/>
    </bean>
    <!-- end of password validation -->

    <bean id="acmUserEventPublisher" class="com.armedia.acm.services.users.service.AcmUserEventPublisher"/>

    <bean id="acmGroupEventPublisher" class="com.armedia.acm.services.users.service.AcmGroupEventPublisher"/>

    <bean id="usersStateProvider" class="com.armedia.acm.services.users.state.AcmUsersStateProvider">
        <property name="userDao" ref="userJpaDao"/>
    </bean>

</beans>